=begin
#Cisco Intersight

#Cisco Intersight is a management platform delivered as a service with embedded analytics for your Cisco and 3rd party IT infrastructure. This platform offers an intelligent level of management that enables IT organizations to analyze, simplify, and automate their environments in more advanced ways than the prior generations of tools. Cisco Intersight provides an integrated and intuitive management experience for resources in the traditional data center as well as at the edge. With flexible deployment options to address complex security needs, getting started with Intersight is quick and easy. Cisco Intersight has deep integration with Cisco UCS and HyperFlex systems allowing for remote deployment, configuration, and ongoing maintenance. The model-based deployment works for a single system in a remote location or hundreds of systems in a data center and enables rapid, standardized configuration and deployment. It also streamlines maintaining those systems whether you are working with small or very large configurations. The Intersight OpenAPI document defines the complete set of properties that are returned in the HTTP response. From that perspective, a client can expect that no additional properties are returned, unless these properties are explicitly defined in the OpenAPI document. However, when a client uses an older version of the Intersight OpenAPI document, the server may send additional properties because the software is more recent than the client. In that case, the client may receive properties that it does not know about. Some generated SDKs perform a strict validation of the HTTP response body against the OpenAPI document. This document was created on 2021-10-20T11:22:53Z.

The version of the OpenAPI document: 1.0.9-4870
Contact: intersight@cisco.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.3.1

=end

require 'date'
require 'time'

module IntersightClient
  # BaseComplexType is a base abstract class for all complex types. All complex types inherit from this base type.
  class MoBaseComplexType
    # The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the type of the payload when marshaling and unmarshaling data. The enum values provides the list of concrete types that can be instantiated from this abstract type.
    attr_accessor :class_id

    # The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property. The enum values provides the list of concrete types that can be instantiated from this abstract type.
    attr_accessor :object_type

    class EnumAttributeValidator
      attr_reader :datatype
      attr_reader :allowable_values

      def initialize(datatype, allowable_values)
        @allowable_values = allowable_values.map do |value|
          case datatype.to_s
          when /Integer/i
            value.to_i
          when /Float/i
            value.to_f
          else
            value
          end
        end
      end

      def valid?(value)
        !value || allowable_values.include?(value)
      end
    end

    # Attribute mapping from ruby-style variable name to JSON key.
    def self.attribute_map
      {
        :'class_id' => :'ClassId',
        :'object_type' => :'ObjectType'
      }
    end

    # Returns all the JSON keys this model knows about
    def self.acceptable_attributes
      attribute_map.values
    end

    # Returns the key-value map of all the JSON attributes this model knows about
    def self.acceptable_attribute_map
      attribute_map
    end

    # Attribute type mapping.
    def self.openapi_types
      {
        :'class_id' => :'String',
        :'object_type' => :'String'
      }
    end

    # List of attributes with nullable: true
    def self.openapi_nullable
      Set.new([
      ])
    end

    # discriminator's property name in OpenAPI v3
    def self.openapi_discriminator_name
      :'ClassId'
    end

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(attributes = {})
      if (!attributes.is_a?(Hash))
        fail ArgumentError, "The input argument (attributes) must be a hash in `IntersightClient::MoBaseComplexType` initialize method"
      end

      # check to see if the attribute exists and convert string to symbol for hash key
      attributes = attributes.each_with_object({}) { |(k, v), h|
        if (!self.class.acceptable_attribute_map.key?(k.to_sym))
          fail ArgumentError, "`#{k}` is not a valid attribute in `#{self.class.name}`. Please check the name to make sure it's valid. List of attributes: " + self.class.acceptable_attribute_map.keys.inspect
        end
        h[k.to_sym] = v
      }

      if attributes.key?(:'class_id')
        self.class_id = attributes[:'class_id']
      end

      if attributes.key?(:'object_type')
        self.object_type = attributes[:'object_type']
      end
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties
      invalid_properties = Array.new
      if @class_id.nil?
        invalid_properties.push('invalid value for "class_id", class_id cannot be nil.')
      end

      if @object_type.nil?
        invalid_properties.push('invalid value for "object_type", object_type cannot be nil.')
      end

      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid?
      return false if @class_id.nil?
      class_id_validator = EnumAttributeValidator.new('String', ["access.AddressType", "adapter.AdapterConfig", "adapter.DceInterfaceSettings", "adapter.EthSettings", "adapter.FcSettings", "adapter.PortChannelSettings", "appliance.ApiStatus", "appliance.CertRenewalPhase", "appliance.KeyValuePair", "appliance.StatusCheck", "asset.AddressInformation", "asset.ApiKeyCredential", "asset.ClientCertificateCredential", "asset.CloudConnection", "asset.ConnectionControlMessage", "asset.ContractInformation", "asset.CustomerInformation", "asset.DeploymentAlarmInfo", "asset.DeploymentDeviceAlarmInfo", "asset.DeploymentDeviceInformation", "asset.DeviceInformation", "asset.DeviceStatistics", "asset.DeviceTransaction", "asset.GlobalUltimate", "asset.HttpConnection", "asset.IntersightDeviceConnectorConnection", "asset.MeteringType", "asset.NewRelicCredential", "asset.NoAuthenticationCredential", "asset.OauthBearerTokenCredential", "asset.OauthClientIdSecretCredential", "asset.OrchestrationHitachiVirtualStoragePlatformOptions", "asset.OrchestrationService", "asset.ParentConnectionSignature", "asset.PrivateKeyCredential", "asset.ProductInformation", "asset.ServiceNowCredential", "asset.SshConnection", "asset.SudiInfo", "asset.TargetKey", "asset.TargetSignature", "asset.TargetStatusDetails", "asset.TerraformIntegrationService", "asset.TerraformIntegrationTerraformAgentOptions", "asset.TerraformIntegrationTerraformCloudOptions", "asset.UsernamePasswordCredential", "asset.VirtualizationAmazonWebServiceOptions", "asset.VirtualizationService", "asset.VmHost", "asset.WorkloadOptimizerAmazonWebServicesBillingOptions", "asset.WorkloadOptimizerHypervOptions", "asset.WorkloadOptimizerMicrosoftAzureApplicationInsightsOptions", "asset.WorkloadOptimizerMicrosoftAzureEnterpriseAgreementOptions", "asset.WorkloadOptimizerMicrosoftAzureServicePrincipalOptions", "asset.WorkloadOptimizerNewRelicOptions", "asset.WorkloadOptimizerOpenStackOptions", "asset.WorkloadOptimizerRedHatOpenStackOptions", "asset.WorkloadOptimizerService", "asset.WorkloadOptimizerVmwareVcenterOptions", "boot.Bootloader", "boot.Iscsi", "boot.LocalCdd", "boot.LocalDisk", "boot.Nvme", "boot.PchStorage", "boot.Pxe", "boot.San", "boot.SdCard", "boot.UefiShell", "boot.Usb", "boot.VirtualMedia", "bulk.HttpHeader", "bulk.RestResult", "bulk.RestSubRequest", "capability.PortRange", "capability.SwitchNetworkLimits", "capability.SwitchStorageLimits", "capability.SwitchSystemLimits", "capability.SwitchingModeCapability", "certificatemanagement.Imc", "cloud.AvailabilityZone", "cloud.BillingUnit", "cloud.CloudRegion", "cloud.CloudTag", "cloud.CustomAttributes", "cloud.ImageReference", "cloud.InstanceType", "cloud.NetworkAccessConfig", "cloud.NetworkAddress", "cloud.NetworkInstanceAttachment", "cloud.NetworkInterfaceAttachment", "cloud.SecurityGroupRule", "cloud.TfcWorkspaceVariables", "cloud.VolumeAttachment", "cloud.VolumeInstanceAttachment", "cloud.VolumeIopsInfo", "cloud.VolumeType", "cmrf.CmRf", "comm.IpV4AddressBlock", "comm.IpV4Interface", "comm.IpV6Interface", "compute.AlarmSummary", "compute.IpAddress", "compute.PersistentMemoryModule", "compute.PersistentMemoryOperation", "compute.ServerConfig", "compute.StorageControllerOperation", "compute.StoragePhysicalDrive", "compute.StoragePhysicalDriveOperation", "compute.StorageVirtualDrive", "compute.StorageVirtualDriveOperation", "cond.AlarmSummary", "connector.CloseStreamMessage", "connector.CommandControlMessage", "connector.CommandTerminalStream", "connector.ExpectPrompt", "connector.FetchStreamMessage", "connector.FileChecksum", "connector.FileMessage", "connector.HttpRequest", "connector.SshConfig", "connector.SshMessage", "connector.StartStream", "connector.StartStreamFromDevice", "connector.StreamAcknowledge", "connector.StreamInput", "connector.StreamKeepalive", "connector.TargetChangeMessage", "connector.Url", "connector.XmlApiMessage", "connectorpack.ConnectorPackUpdate", "content.ComplexType", "content.Parameter", "content.TextParameter", "convergedinfra.AlarmSummary", "convergedinfra.ComplianceSummary", "convergedinfra.PodSummary", "crd.CustomResourceConfigProperty", "equipment.IoCardIdentity", "fabric.LldpSettings", "fabric.MacAgingSettings", "fabric.PortIdentifier", "fabric.QosClass", "fabric.UdldGlobalSettings", "fabric.UdldSettings", "fabric.VlanSettings", "fcpool.Block", "feedback.FeedbackData", "firmware.ChassisUpgradeImpact", "firmware.CifsServer", "firmware.ComponentImpact", "firmware.ComponentMeta", "firmware.DirectDownload", "firmware.FabricUpgradeImpact", "firmware.FirmwareInventory", "firmware.HttpServer", "firmware.NetworkShare", "firmware.NfsServer", "firmware.ServerUpgradeImpact", "forecast.Model", "hcl.Constraint", "hcl.Firmware", "hcl.HardwareCompatibilityProfile", "hcl.Product", "hyperflex.AlarmSummary", "hyperflex.AppSettingConstraint", "hyperflex.BackupPolicySettings", "hyperflex.BondState", "hyperflex.DatastoreInfo", "hyperflex.DiskStatus", "hyperflex.EntityReference", "hyperflex.ErrorStack", "hyperflex.FeatureLimitEntry", "hyperflex.FilePath", "hyperflex.HealthCheckScriptInfo", "hyperflex.HxHostMountStatusDt", "hyperflex.HxLicenseAuthorizationDetailsDt", "hyperflex.HxLinkDt", "hyperflex.HxNetworkAddressDt", "hyperflex.HxPlatformDatastoreConfigDt", "hyperflex.HxRegistrationDetailsDt", "hyperflex.HxResiliencyInfoDt", "hyperflex.HxSiteDt", "hyperflex.HxUuIdDt", "hyperflex.HxZoneInfoDt", "hyperflex.HxZoneResiliencyInfoDt", "hyperflex.IpAddrRange", "hyperflex.LogicalAvailabilityZone", "hyperflex.MacAddrPrefixRange", "hyperflex.MapClusterIdToProtectionInfo", "hyperflex.MapClusterIdToStSnapshotPoint", "hyperflex.MapUuidToTrackedDisk", "hyperflex.NamedVlan", "hyperflex.NamedVsan", "hyperflex.NetworkPort", "hyperflex.PortTypeToPortNumberMap", "hyperflex.ProtectionInfo", "hyperflex.ReplicationClusterReferenceToSchedule", "hyperflex.ReplicationPeerInfo", "hyperflex.ReplicationPlatDatastore", "hyperflex.ReplicationPlatDatastorePair", "hyperflex.ReplicationSchedule", "hyperflex.ReplicationStatus", "hyperflex.RpoStatus", "hyperflex.ServerFirmwareVersionInfo", "hyperflex.ServerModelEntry", "hyperflex.SnapshotFiles", "hyperflex.SnapshotInfoBrief", "hyperflex.SnapshotPoint", "hyperflex.SnapshotStatus", "hyperflex.StPlatformClusterHealingInfo", "hyperflex.StPlatformClusterResiliencyInfo", "hyperflex.Summary", "hyperflex.TrackedDisk", "hyperflex.TrackedFile", "hyperflex.VdiskConfig", "hyperflex.VirtualMachine", "hyperflex.VirtualMachineRuntimeInfo", "hyperflex.VmDisk", "hyperflex.VmInterface", "hyperflex.VmProtectionSpaceUsage", "hyperflex.WwxnPrefixRange", "i18n.Message", "i18n.MessageParam", "iaas.LicenseKeysInfo", "iaas.LicenseUtilizationInfo", "iaas.WorkflowSteps", "iam.AccountPermissions", "iam.ClientMeta", "iam.EndPointPasswordProperties", "iam.FeatureDefinition", "iam.GroupPermissionToRoles", "iam.LdapBaseProperties", "iam.LdapDnsParameters", "iam.PermissionReference", "iam.PermissionToRoles", "iam.Rule", "iam.SamlSpConnection", "iam.SsoSessionAttributes", "imcconnector.WebUiMessage", "infra.HardwareInfo", "infra.MetaData", "inventory.InventoryMo", "inventory.UemInfo", "ippool.IpV4Block", "ippool.IpV4Config", "ippool.IpV6Block", "ippool.IpV6Config", "iqnpool.IqnSuffixBlock", "kubernetes.ActionInfo", "kubernetes.Addon", "kubernetes.AddonConfiguration", "kubernetes.BaremetalNetworkInfo", "kubernetes.CalicoConfig", "kubernetes.ClusterCertificateConfiguration", "kubernetes.ClusterManagementConfig", "kubernetes.Configuration", "kubernetes.DaemonSetStatus", "kubernetes.DeploymentStatus", "kubernetes.EssentialAddon", "kubernetes.EsxiVirtualMachineInfraConfig", "kubernetes.Ethernet", "kubernetes.EthernetMatcher", "kubernetes.HyperFlexApVirtualMachineInfraConfig", "kubernetes.IngressStatus", "kubernetes.KeyValue", "kubernetes.LoadBalancer", "kubernetes.NodeAddress", "kubernetes.NodeGroupLabel", "kubernetes.NodeGroupTaint", "kubernetes.NodeInfo", "kubernetes.NodeSpec", "kubernetes.NodeStatus", "kubernetes.ObjectMeta", "kubernetes.OvsBond", "kubernetes.PodStatus", "kubernetes.ProxyConfig", "kubernetes.ServiceStatus", "kubernetes.StatefulSetStatus", "kubernetes.Taint", "macpool.Block", "memory.PersistentMemoryGoal", "memory.PersistentMemoryLocalSecurity", "memory.PersistentMemoryLogicalNamespace", "meta.AccessPrivilege", "meta.DisplayNameDefinition", "meta.IdentityDefinition", "meta.PropDefinition", "meta.RelationshipDefinition", "mo.MoRef", "mo.Tag", "mo.VersionContext", "niaapi.Detail", "niaapi.NewReleaseDetail", "niaapi.RevisionInfo", "niaapi.SoftwareRegex", "niaapi.VersionRegexPlatform", "niatelemetry.BootflashDetails", "niatelemetry.Diskinfo", "niatelemetry.Interface", "niatelemetry.InterfaceElement", "niatelemetry.LogicalLink", "niatelemetry.NvePacketCounters", "niatelemetry.NveVni", "niatelemetry.NxosBgpMvpn", "niatelemetry.NxosVtp", "niatelemetry.SmartLicense", "notification.AlarmMoCondition", "notification.SendEmail", "ntp.AuthNtpServer", "onprem.ImagePackage", "onprem.Schedule", "onprem.UpgradeNote", "onprem.UpgradePhase", "oprs.Kvpair", "os.Answers", "os.GlobalConfig", "os.Ipv4Configuration", "os.Ipv6Configuration", "os.PhysicalDisk", "os.PhysicalDiskResponse", "os.PlaceHolder", "os.ServerConfig", "os.ValidationInformation", "os.VirtualDrive", "os.VirtualDriveResponse", "os.WindowsParameters", "pkix.DistinguishedName", "pkix.EcdsaKeySpec", "pkix.EddsaKeySpec", "pkix.RsaAlgorithm", "pkix.SubjectAlternateName", "policy.ActionQualifier", "policy.ConfigChange", "policy.ConfigChangeContext", "policy.ConfigContext", "policy.ConfigResultContext", "policy.Qualifier", "policyinventory.JobInfo", "recovery.BackupSchedule", "resource.PerTypeCombinedSelector", "resource.Selector", "resource.SourceToPermissionResources", "resource.SourceToPermissionResourcesHolder", "resourcepool.ServerLeaseParameters", "resourcepool.ServerPoolParameters", "sdcard.Diagnostics", "sdcard.Drivers", "sdcard.HostUpgradeUtility", "sdcard.OperatingSystem", "sdcard.Partition", "sdcard.ServerConfigurationUtility", "sdcard.UserPartition", "sdwan.NetworkConfigurationType", "sdwan.TemplateInputsType", "server.PendingWorkflowTrigger", "snmp.Trap", "snmp.User", "softwarerepository.ApplianceUpload", "softwarerepository.CifsServer", "softwarerepository.ConstraintModels", "softwarerepository.HttpServer", "softwarerepository.ImportResult", "softwarerepository.LocalMachine", "softwarerepository.NfsServer", "storage.AutomaticDriveGroup", "storage.HitachiArrayUtilization", "storage.HitachiCapacity", "storage.HitachiInitiator", "storage.Initiator", "storage.KeySetting", "storage.LocalKeySetting", "storage.M2VirtualDriveConfig", "storage.ManualDriveGroup", "storage.NetAppEthernetPortLag", "storage.NetAppEthernetPortVlan", "storage.NetAppExportPolicyRule", "storage.NetAppHighAvailability", "storage.NetAppPerformanceMetricsAverage", "storage.NetAppPort", "storage.NetAppStorageClusterEfficiency", "storage.NetAppStorageUtilization", "storage.PureArrayUtilization", "storage.PureDiskUtilization", "storage.PureHostUtilization", "storage.PureReplicationBlackout", "storage.PureVolumeUtilization", "storage.R0Drive", "storage.RemoteKeySetting", "storage.SpanDrives", "storage.StorageContainerHostMountStatus", "storage.StorageContainerUtilization", "storage.VirtualDriveConfiguration", "storage.VirtualDrivePolicy", "storage.VolumeUtilization", "syslog.LocalFileLoggingClient", "syslog.RemoteLoggingClient", "tam.Action", "tam.ApiDataSource", "tam.Identifiers", "tam.PsirtSeverity", "tam.QueryEntry", "tam.S3DataSource", "tam.SecurityAdvisoryDetails", "tam.TextFsmTemplateDataSource", "techsupportmanagement.ApplianceParam", "techsupportmanagement.NiaParam", "techsupportmanagement.PlatformParam", "template.TransformationStage", "terraform.CloudResource", "terraform.Runstate", "ucsd.ConnectorPack", "ucsd.UcsdRestoreParameters", "ucsdconnector.RestClientMessage", "uuidpool.UuidBlock", "virtualization.ActionInfo", "virtualization.AwsVmComputeConfiguration", "virtualization.AwsVmConfiguration", "virtualization.AwsVmNetworkConfiguration", "virtualization.AwsVmStorageConfiguration", "virtualization.CloudInitConfig", "virtualization.ComputeCapacity", "virtualization.CpuAllocation", "virtualization.CpuInfo", "virtualization.EsxiCloneCustomSpec", "virtualization.EsxiOvaCustomSpec", "virtualization.EsxiVmComputeConfiguration", "virtualization.EsxiVmConfiguration", "virtualization.EsxiVmNetworkConfiguration", "virtualization.EsxiVmStorageConfiguration", "virtualization.GuestInfo", "virtualization.HxapVmConfiguration", "virtualization.IpAddressInfo", "virtualization.MemoryAllocation", "virtualization.MemoryCapacity", "virtualization.NetworkInterface", "virtualization.ProductInfo", "virtualization.StorageCapacity", "virtualization.VirtualDiskConfig", "virtualization.VirtualMachineDisk", "virtualization.VmEsxiDisk", "virtualization.VmwareRemoteDisplayInfo", "virtualization.VmwareResourceConsumption", "virtualization.VmwareSharesInfo", "virtualization.VmwareTeamingAndFailover", "virtualization.VmwareVlanRange", "virtualization.VmwareVmCpuShareInfo", "virtualization.VmwareVmCpuSocketInfo", "virtualization.VmwareVmDiskCommitInfo", "virtualization.VmwareVmMemoryShareInfo", "virtualization.VolumeInfo", "vmedia.Mapping", "vnic.ArfsSettings", "vnic.Cdn", "vnic.CompletionQueueSettings", "vnic.EthInterruptSettings", "vnic.EthRxQueueSettings", "vnic.EthTxQueueSettings", "vnic.FcErrorRecoverySettings", "vnic.FcInterruptSettings", "vnic.FcQueueSettings", "vnic.FlogiSettings", "vnic.IscsiAuthProfile", "vnic.Lun", "vnic.NvgreSettings", "vnic.PlacementSettings", "vnic.PlogiSettings", "vnic.RoceSettings", "vnic.RssHashSettings", "vnic.ScsiQueueSettings", "vnic.TcpOffloadSettings", "vnic.UsnicSettings", "vnic.VifStatus", "vnic.VlanSettings", "vnic.VmqSettings", "vnic.VsanSettings", "vnic.VxlanSettings", "workflow.ActionWorkflowDefinition", "workflow.ArrayDataType", "workflow.AssociatedRoles", "workflow.CliCommand", "workflow.Comments", "workflow.Constraints", "workflow.CustomArrayItem", "workflow.CustomDataProperty", "workflow.CustomDataType", "workflow.CustomDataTypeProperties", "workflow.DecisionCase", "workflow.DecisionTask", "workflow.DefaultValue", "workflow.DisplayMeta", "workflow.DynamicWorkflowActionTaskList", "workflow.EnumEntry", "workflow.ExpectPrompt", "workflow.FailureEndTask", "workflow.FileDownloadOp", "workflow.FileOperations", "workflow.FileTemplateOp", "workflow.FileTransfer", "workflow.ForkTask", "workflow.InitiatorContext", "workflow.InternalProperties", "workflow.JoinTask", "workflow.LoopTask", "workflow.Message", "workflow.MoReferenceArrayItem", "workflow.MoReferenceDataType", "workflow.MoReferenceProperty", "workflow.ParameterSet", "workflow.PrimitiveArrayItem", "workflow.PrimitiveDataProperty", "workflow.PrimitiveDataType", "workflow.Properties", "workflow.ResultHandler", "workflow.RollbackTask", "workflow.RollbackWorkflowTask", "workflow.SelectorProperty", "workflow.SshCmd", "workflow.SshConfig", "workflow.SshSession", "workflow.StartTask", "workflow.SubWorkflowTask", "workflow.SuccessEndTask", "workflow.TargetContext", "workflow.TargetDataType", "workflow.TargetProperty", "workflow.TaskConstraints", "workflow.TaskRetryInfo", "workflow.UiInputFilter", "workflow.ValidationError", "workflow.ValidationInformation", "workflow.WaitTask", "workflow.WaitTaskPrompt", "workflow.WebApi", "workflow.WorkerTask", "workflow.WorkflowCtx", "workflow.WorkflowEngineProperties", "workflow.WorkflowInfoProperties", "workflow.WorkflowProperties", "workflow.XmlApi", "x509.Certificate"])
      return false unless class_id_validator.valid?(@class_id)
      return false if @object_type.nil?
      object_type_validator = EnumAttributeValidator.new('String', ["access.AddressType", "adapter.AdapterConfig", "adapter.DceInterfaceSettings", "adapter.EthSettings", "adapter.FcSettings", "adapter.PortChannelSettings", "appliance.ApiStatus", "appliance.CertRenewalPhase", "appliance.KeyValuePair", "appliance.StatusCheck", "asset.AddressInformation", "asset.ApiKeyCredential", "asset.ClientCertificateCredential", "asset.CloudConnection", "asset.ConnectionControlMessage", "asset.ContractInformation", "asset.CustomerInformation", "asset.DeploymentAlarmInfo", "asset.DeploymentDeviceAlarmInfo", "asset.DeploymentDeviceInformation", "asset.DeviceInformation", "asset.DeviceStatistics", "asset.DeviceTransaction", "asset.GlobalUltimate", "asset.HttpConnection", "asset.IntersightDeviceConnectorConnection", "asset.MeteringType", "asset.NewRelicCredential", "asset.NoAuthenticationCredential", "asset.OauthBearerTokenCredential", "asset.OauthClientIdSecretCredential", "asset.OrchestrationHitachiVirtualStoragePlatformOptions", "asset.OrchestrationService", "asset.ParentConnectionSignature", "asset.PrivateKeyCredential", "asset.ProductInformation", "asset.ServiceNowCredential", "asset.SshConnection", "asset.SudiInfo", "asset.TargetKey", "asset.TargetSignature", "asset.TargetStatusDetails", "asset.TerraformIntegrationService", "asset.TerraformIntegrationTerraformAgentOptions", "asset.TerraformIntegrationTerraformCloudOptions", "asset.UsernamePasswordCredential", "asset.VirtualizationAmazonWebServiceOptions", "asset.VirtualizationService", "asset.VmHost", "asset.WorkloadOptimizerAmazonWebServicesBillingOptions", "asset.WorkloadOptimizerHypervOptions", "asset.WorkloadOptimizerMicrosoftAzureApplicationInsightsOptions", "asset.WorkloadOptimizerMicrosoftAzureEnterpriseAgreementOptions", "asset.WorkloadOptimizerMicrosoftAzureServicePrincipalOptions", "asset.WorkloadOptimizerNewRelicOptions", "asset.WorkloadOptimizerOpenStackOptions", "asset.WorkloadOptimizerRedHatOpenStackOptions", "asset.WorkloadOptimizerService", "asset.WorkloadOptimizerVmwareVcenterOptions", "boot.Bootloader", "boot.Iscsi", "boot.LocalCdd", "boot.LocalDisk", "boot.Nvme", "boot.PchStorage", "boot.Pxe", "boot.San", "boot.SdCard", "boot.UefiShell", "boot.Usb", "boot.VirtualMedia", "bulk.HttpHeader", "bulk.RestResult", "bulk.RestSubRequest", "capability.PortRange", "capability.SwitchNetworkLimits", "capability.SwitchStorageLimits", "capability.SwitchSystemLimits", "capability.SwitchingModeCapability", "certificatemanagement.Imc", "cloud.AvailabilityZone", "cloud.BillingUnit", "cloud.CloudRegion", "cloud.CloudTag", "cloud.CustomAttributes", "cloud.ImageReference", "cloud.InstanceType", "cloud.NetworkAccessConfig", "cloud.NetworkAddress", "cloud.NetworkInstanceAttachment", "cloud.NetworkInterfaceAttachment", "cloud.SecurityGroupRule", "cloud.TfcWorkspaceVariables", "cloud.VolumeAttachment", "cloud.VolumeInstanceAttachment", "cloud.VolumeIopsInfo", "cloud.VolumeType", "cmrf.CmRf", "comm.IpV4AddressBlock", "comm.IpV4Interface", "comm.IpV6Interface", "compute.AlarmSummary", "compute.IpAddress", "compute.PersistentMemoryModule", "compute.PersistentMemoryOperation", "compute.ServerConfig", "compute.StorageControllerOperation", "compute.StoragePhysicalDrive", "compute.StoragePhysicalDriveOperation", "compute.StorageVirtualDrive", "compute.StorageVirtualDriveOperation", "cond.AlarmSummary", "connector.CloseStreamMessage", "connector.CommandControlMessage", "connector.CommandTerminalStream", "connector.ExpectPrompt", "connector.FetchStreamMessage", "connector.FileChecksum", "connector.FileMessage", "connector.HttpRequest", "connector.SshConfig", "connector.SshMessage", "connector.StartStream", "connector.StartStreamFromDevice", "connector.StreamAcknowledge", "connector.StreamInput", "connector.StreamKeepalive", "connector.TargetChangeMessage", "connector.Url", "connector.XmlApiMessage", "connectorpack.ConnectorPackUpdate", "content.ComplexType", "content.Parameter", "content.TextParameter", "convergedinfra.AlarmSummary", "convergedinfra.ComplianceSummary", "convergedinfra.PodSummary", "crd.CustomResourceConfigProperty", "equipment.IoCardIdentity", "fabric.LldpSettings", "fabric.MacAgingSettings", "fabric.PortIdentifier", "fabric.QosClass", "fabric.UdldGlobalSettings", "fabric.UdldSettings", "fabric.VlanSettings", "fcpool.Block", "feedback.FeedbackData", "firmware.ChassisUpgradeImpact", "firmware.CifsServer", "firmware.ComponentImpact", "firmware.ComponentMeta", "firmware.DirectDownload", "firmware.FabricUpgradeImpact", "firmware.FirmwareInventory", "firmware.HttpServer", "firmware.NetworkShare", "firmware.NfsServer", "firmware.ServerUpgradeImpact", "forecast.Model", "hcl.Constraint", "hcl.Firmware", "hcl.HardwareCompatibilityProfile", "hcl.Product", "hyperflex.AlarmSummary", "hyperflex.AppSettingConstraint", "hyperflex.BackupPolicySettings", "hyperflex.BondState", "hyperflex.DatastoreInfo", "hyperflex.DiskStatus", "hyperflex.EntityReference", "hyperflex.ErrorStack", "hyperflex.FeatureLimitEntry", "hyperflex.FilePath", "hyperflex.HealthCheckScriptInfo", "hyperflex.HxHostMountStatusDt", "hyperflex.HxLicenseAuthorizationDetailsDt", "hyperflex.HxLinkDt", "hyperflex.HxNetworkAddressDt", "hyperflex.HxPlatformDatastoreConfigDt", "hyperflex.HxRegistrationDetailsDt", "hyperflex.HxResiliencyInfoDt", "hyperflex.HxSiteDt", "hyperflex.HxUuIdDt", "hyperflex.HxZoneInfoDt", "hyperflex.HxZoneResiliencyInfoDt", "hyperflex.IpAddrRange", "hyperflex.LogicalAvailabilityZone", "hyperflex.MacAddrPrefixRange", "hyperflex.MapClusterIdToProtectionInfo", "hyperflex.MapClusterIdToStSnapshotPoint", "hyperflex.MapUuidToTrackedDisk", "hyperflex.NamedVlan", "hyperflex.NamedVsan", "hyperflex.NetworkPort", "hyperflex.PortTypeToPortNumberMap", "hyperflex.ProtectionInfo", "hyperflex.ReplicationClusterReferenceToSchedule", "hyperflex.ReplicationPeerInfo", "hyperflex.ReplicationPlatDatastore", "hyperflex.ReplicationPlatDatastorePair", "hyperflex.ReplicationSchedule", "hyperflex.ReplicationStatus", "hyperflex.RpoStatus", "hyperflex.ServerFirmwareVersionInfo", "hyperflex.ServerModelEntry", "hyperflex.SnapshotFiles", "hyperflex.SnapshotInfoBrief", "hyperflex.SnapshotPoint", "hyperflex.SnapshotStatus", "hyperflex.StPlatformClusterHealingInfo", "hyperflex.StPlatformClusterResiliencyInfo", "hyperflex.Summary", "hyperflex.TrackedDisk", "hyperflex.TrackedFile", "hyperflex.VdiskConfig", "hyperflex.VirtualMachine", "hyperflex.VirtualMachineRuntimeInfo", "hyperflex.VmDisk", "hyperflex.VmInterface", "hyperflex.VmProtectionSpaceUsage", "hyperflex.WwxnPrefixRange", "i18n.Message", "i18n.MessageParam", "iaas.LicenseKeysInfo", "iaas.LicenseUtilizationInfo", "iaas.WorkflowSteps", "iam.AccountPermissions", "iam.ClientMeta", "iam.EndPointPasswordProperties", "iam.FeatureDefinition", "iam.GroupPermissionToRoles", "iam.LdapBaseProperties", "iam.LdapDnsParameters", "iam.PermissionReference", "iam.PermissionToRoles", "iam.Rule", "iam.SamlSpConnection", "iam.SsoSessionAttributes", "imcconnector.WebUiMessage", "infra.HardwareInfo", "infra.MetaData", "inventory.InventoryMo", "inventory.UemInfo", "ippool.IpV4Block", "ippool.IpV4Config", "ippool.IpV6Block", "ippool.IpV6Config", "iqnpool.IqnSuffixBlock", "kubernetes.ActionInfo", "kubernetes.Addon", "kubernetes.AddonConfiguration", "kubernetes.BaremetalNetworkInfo", "kubernetes.CalicoConfig", "kubernetes.ClusterCertificateConfiguration", "kubernetes.ClusterManagementConfig", "kubernetes.Configuration", "kubernetes.DaemonSetStatus", "kubernetes.DeploymentStatus", "kubernetes.EssentialAddon", "kubernetes.EsxiVirtualMachineInfraConfig", "kubernetes.Ethernet", "kubernetes.EthernetMatcher", "kubernetes.HyperFlexApVirtualMachineInfraConfig", "kubernetes.IngressStatus", "kubernetes.KeyValue", "kubernetes.LoadBalancer", "kubernetes.NodeAddress", "kubernetes.NodeGroupLabel", "kubernetes.NodeGroupTaint", "kubernetes.NodeInfo", "kubernetes.NodeSpec", "kubernetes.NodeStatus", "kubernetes.ObjectMeta", "kubernetes.OvsBond", "kubernetes.PodStatus", "kubernetes.ProxyConfig", "kubernetes.ServiceStatus", "kubernetes.StatefulSetStatus", "kubernetes.Taint", "macpool.Block", "memory.PersistentMemoryGoal", "memory.PersistentMemoryLocalSecurity", "memory.PersistentMemoryLogicalNamespace", "meta.AccessPrivilege", "meta.DisplayNameDefinition", "meta.IdentityDefinition", "meta.PropDefinition", "meta.RelationshipDefinition", "mo.MoRef", "mo.Tag", "mo.VersionContext", "niaapi.Detail", "niaapi.NewReleaseDetail", "niaapi.RevisionInfo", "niaapi.SoftwareRegex", "niaapi.VersionRegexPlatform", "niatelemetry.BootflashDetails", "niatelemetry.Diskinfo", "niatelemetry.Interface", "niatelemetry.InterfaceElement", "niatelemetry.LogicalLink", "niatelemetry.NvePacketCounters", "niatelemetry.NveVni", "niatelemetry.NxosBgpMvpn", "niatelemetry.NxosVtp", "niatelemetry.SmartLicense", "notification.AlarmMoCondition", "notification.SendEmail", "ntp.AuthNtpServer", "onprem.ImagePackage", "onprem.Schedule", "onprem.UpgradeNote", "onprem.UpgradePhase", "oprs.Kvpair", "os.Answers", "os.GlobalConfig", "os.Ipv4Configuration", "os.Ipv6Configuration", "os.PhysicalDisk", "os.PhysicalDiskResponse", "os.PlaceHolder", "os.ServerConfig", "os.ValidationInformation", "os.VirtualDrive", "os.VirtualDriveResponse", "os.WindowsParameters", "pkix.DistinguishedName", "pkix.EcdsaKeySpec", "pkix.EddsaKeySpec", "pkix.RsaAlgorithm", "pkix.SubjectAlternateName", "policy.ActionQualifier", "policy.ConfigChange", "policy.ConfigChangeContext", "policy.ConfigContext", "policy.ConfigResultContext", "policy.Qualifier", "policyinventory.JobInfo", "recovery.BackupSchedule", "resource.PerTypeCombinedSelector", "resource.Selector", "resource.SourceToPermissionResources", "resource.SourceToPermissionResourcesHolder", "resourcepool.ServerLeaseParameters", "resourcepool.ServerPoolParameters", "sdcard.Diagnostics", "sdcard.Drivers", "sdcard.HostUpgradeUtility", "sdcard.OperatingSystem", "sdcard.Partition", "sdcard.ServerConfigurationUtility", "sdcard.UserPartition", "sdwan.NetworkConfigurationType", "sdwan.TemplateInputsType", "server.PendingWorkflowTrigger", "snmp.Trap", "snmp.User", "softwarerepository.ApplianceUpload", "softwarerepository.CifsServer", "softwarerepository.ConstraintModels", "softwarerepository.HttpServer", "softwarerepository.ImportResult", "softwarerepository.LocalMachine", "softwarerepository.NfsServer", "storage.AutomaticDriveGroup", "storage.HitachiArrayUtilization", "storage.HitachiCapacity", "storage.HitachiInitiator", "storage.Initiator", "storage.KeySetting", "storage.LocalKeySetting", "storage.M2VirtualDriveConfig", "storage.ManualDriveGroup", "storage.NetAppEthernetPortLag", "storage.NetAppEthernetPortVlan", "storage.NetAppExportPolicyRule", "storage.NetAppHighAvailability", "storage.NetAppPerformanceMetricsAverage", "storage.NetAppPort", "storage.NetAppStorageClusterEfficiency", "storage.NetAppStorageUtilization", "storage.PureArrayUtilization", "storage.PureDiskUtilization", "storage.PureHostUtilization", "storage.PureReplicationBlackout", "storage.PureVolumeUtilization", "storage.R0Drive", "storage.RemoteKeySetting", "storage.SpanDrives", "storage.StorageContainerHostMountStatus", "storage.StorageContainerUtilization", "storage.VirtualDriveConfiguration", "storage.VirtualDrivePolicy", "storage.VolumeUtilization", "syslog.LocalFileLoggingClient", "syslog.RemoteLoggingClient", "tam.Action", "tam.ApiDataSource", "tam.Identifiers", "tam.PsirtSeverity", "tam.QueryEntry", "tam.S3DataSource", "tam.SecurityAdvisoryDetails", "tam.TextFsmTemplateDataSource", "techsupportmanagement.ApplianceParam", "techsupportmanagement.NiaParam", "techsupportmanagement.PlatformParam", "template.TransformationStage", "terraform.CloudResource", "terraform.Runstate", "ucsd.ConnectorPack", "ucsd.UcsdRestoreParameters", "ucsdconnector.RestClientMessage", "uuidpool.UuidBlock", "virtualization.ActionInfo", "virtualization.AwsVmComputeConfiguration", "virtualization.AwsVmConfiguration", "virtualization.AwsVmNetworkConfiguration", "virtualization.AwsVmStorageConfiguration", "virtualization.CloudInitConfig", "virtualization.ComputeCapacity", "virtualization.CpuAllocation", "virtualization.CpuInfo", "virtualization.EsxiCloneCustomSpec", "virtualization.EsxiOvaCustomSpec", "virtualization.EsxiVmComputeConfiguration", "virtualization.EsxiVmConfiguration", "virtualization.EsxiVmNetworkConfiguration", "virtualization.EsxiVmStorageConfiguration", "virtualization.GuestInfo", "virtualization.HxapVmConfiguration", "virtualization.IpAddressInfo", "virtualization.MemoryAllocation", "virtualization.MemoryCapacity", "virtualization.NetworkInterface", "virtualization.ProductInfo", "virtualization.StorageCapacity", "virtualization.VirtualDiskConfig", "virtualization.VirtualMachineDisk", "virtualization.VmEsxiDisk", "virtualization.VmwareRemoteDisplayInfo", "virtualization.VmwareResourceConsumption", "virtualization.VmwareSharesInfo", "virtualization.VmwareTeamingAndFailover", "virtualization.VmwareVlanRange", "virtualization.VmwareVmCpuShareInfo", "virtualization.VmwareVmCpuSocketInfo", "virtualization.VmwareVmDiskCommitInfo", "virtualization.VmwareVmMemoryShareInfo", "virtualization.VolumeInfo", "vmedia.Mapping", "vnic.ArfsSettings", "vnic.Cdn", "vnic.CompletionQueueSettings", "vnic.EthInterruptSettings", "vnic.EthRxQueueSettings", "vnic.EthTxQueueSettings", "vnic.FcErrorRecoverySettings", "vnic.FcInterruptSettings", "vnic.FcQueueSettings", "vnic.FlogiSettings", "vnic.IscsiAuthProfile", "vnic.Lun", "vnic.NvgreSettings", "vnic.PlacementSettings", "vnic.PlogiSettings", "vnic.RoceSettings", "vnic.RssHashSettings", "vnic.ScsiQueueSettings", "vnic.TcpOffloadSettings", "vnic.UsnicSettings", "vnic.VifStatus", "vnic.VlanSettings", "vnic.VmqSettings", "vnic.VsanSettings", "vnic.VxlanSettings", "workflow.ActionWorkflowDefinition", "workflow.ArrayDataType", "workflow.AssociatedRoles", "workflow.CliCommand", "workflow.Comments", "workflow.Constraints", "workflow.CustomArrayItem", "workflow.CustomDataProperty", "workflow.CustomDataType", "workflow.CustomDataTypeProperties", "workflow.DecisionCase", "workflow.DecisionTask", "workflow.DefaultValue", "workflow.DisplayMeta", "workflow.DynamicWorkflowActionTaskList", "workflow.EnumEntry", "workflow.ExpectPrompt", "workflow.FailureEndTask", "workflow.FileDownloadOp", "workflow.FileOperations", "workflow.FileTemplateOp", "workflow.FileTransfer", "workflow.ForkTask", "workflow.InitiatorContext", "workflow.InternalProperties", "workflow.JoinTask", "workflow.LoopTask", "workflow.Message", "workflow.MoReferenceArrayItem", "workflow.MoReferenceDataType", "workflow.MoReferenceProperty", "workflow.ParameterSet", "workflow.PrimitiveArrayItem", "workflow.PrimitiveDataProperty", "workflow.PrimitiveDataType", "workflow.Properties", "workflow.ResultHandler", "workflow.RollbackTask", "workflow.RollbackWorkflowTask", "workflow.SelectorProperty", "workflow.SshCmd", "workflow.SshConfig", "workflow.SshSession", "workflow.StartTask", "workflow.SubWorkflowTask", "workflow.SuccessEndTask", "workflow.TargetContext", "workflow.TargetDataType", "workflow.TargetProperty", "workflow.TaskConstraints", "workflow.TaskRetryInfo", "workflow.UiInputFilter", "workflow.ValidationError", "workflow.ValidationInformation", "workflow.WaitTask", "workflow.WaitTaskPrompt", "workflow.WebApi", "workflow.WorkerTask", "workflow.WorkflowCtx", "workflow.WorkflowEngineProperties", "workflow.WorkflowInfoProperties", "workflow.WorkflowProperties", "workflow.XmlApi", "x509.Certificate"])
      return false unless object_type_validator.valid?(@object_type)
      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] class_id Object to be assigned
    def class_id=(class_id)
      validator = EnumAttributeValidator.new('String', ["access.AddressType", "adapter.AdapterConfig", "adapter.DceInterfaceSettings", "adapter.EthSettings", "adapter.FcSettings", "adapter.PortChannelSettings", "appliance.ApiStatus", "appliance.CertRenewalPhase", "appliance.KeyValuePair", "appliance.StatusCheck", "asset.AddressInformation", "asset.ApiKeyCredential", "asset.ClientCertificateCredential", "asset.CloudConnection", "asset.ConnectionControlMessage", "asset.ContractInformation", "asset.CustomerInformation", "asset.DeploymentAlarmInfo", "asset.DeploymentDeviceAlarmInfo", "asset.DeploymentDeviceInformation", "asset.DeviceInformation", "asset.DeviceStatistics", "asset.DeviceTransaction", "asset.GlobalUltimate", "asset.HttpConnection", "asset.IntersightDeviceConnectorConnection", "asset.MeteringType", "asset.NewRelicCredential", "asset.NoAuthenticationCredential", "asset.OauthBearerTokenCredential", "asset.OauthClientIdSecretCredential", "asset.OrchestrationHitachiVirtualStoragePlatformOptions", "asset.OrchestrationService", "asset.ParentConnectionSignature", "asset.PrivateKeyCredential", "asset.ProductInformation", "asset.ServiceNowCredential", "asset.SshConnection", "asset.SudiInfo", "asset.TargetKey", "asset.TargetSignature", "asset.TargetStatusDetails", "asset.TerraformIntegrationService", "asset.TerraformIntegrationTerraformAgentOptions", "asset.TerraformIntegrationTerraformCloudOptions", "asset.UsernamePasswordCredential", "asset.VirtualizationAmazonWebServiceOptions", "asset.VirtualizationService", "asset.VmHost", "asset.WorkloadOptimizerAmazonWebServicesBillingOptions", "asset.WorkloadOptimizerHypervOptions", "asset.WorkloadOptimizerMicrosoftAzureApplicationInsightsOptions", "asset.WorkloadOptimizerMicrosoftAzureEnterpriseAgreementOptions", "asset.WorkloadOptimizerMicrosoftAzureServicePrincipalOptions", "asset.WorkloadOptimizerNewRelicOptions", "asset.WorkloadOptimizerOpenStackOptions", "asset.WorkloadOptimizerRedHatOpenStackOptions", "asset.WorkloadOptimizerService", "asset.WorkloadOptimizerVmwareVcenterOptions", "boot.Bootloader", "boot.Iscsi", "boot.LocalCdd", "boot.LocalDisk", "boot.Nvme", "boot.PchStorage", "boot.Pxe", "boot.San", "boot.SdCard", "boot.UefiShell", "boot.Usb", "boot.VirtualMedia", "bulk.HttpHeader", "bulk.RestResult", "bulk.RestSubRequest", "capability.PortRange", "capability.SwitchNetworkLimits", "capability.SwitchStorageLimits", "capability.SwitchSystemLimits", "capability.SwitchingModeCapability", "certificatemanagement.Imc", "cloud.AvailabilityZone", "cloud.BillingUnit", "cloud.CloudRegion", "cloud.CloudTag", "cloud.CustomAttributes", "cloud.ImageReference", "cloud.InstanceType", "cloud.NetworkAccessConfig", "cloud.NetworkAddress", "cloud.NetworkInstanceAttachment", "cloud.NetworkInterfaceAttachment", "cloud.SecurityGroupRule", "cloud.TfcWorkspaceVariables", "cloud.VolumeAttachment", "cloud.VolumeInstanceAttachment", "cloud.VolumeIopsInfo", "cloud.VolumeType", "cmrf.CmRf", "comm.IpV4AddressBlock", "comm.IpV4Interface", "comm.IpV6Interface", "compute.AlarmSummary", "compute.IpAddress", "compute.PersistentMemoryModule", "compute.PersistentMemoryOperation", "compute.ServerConfig", "compute.StorageControllerOperation", "compute.StoragePhysicalDrive", "compute.StoragePhysicalDriveOperation", "compute.StorageVirtualDrive", "compute.StorageVirtualDriveOperation", "cond.AlarmSummary", "connector.CloseStreamMessage", "connector.CommandControlMessage", "connector.CommandTerminalStream", "connector.ExpectPrompt", "connector.FetchStreamMessage", "connector.FileChecksum", "connector.FileMessage", "connector.HttpRequest", "connector.SshConfig", "connector.SshMessage", "connector.StartStream", "connector.StartStreamFromDevice", "connector.StreamAcknowledge", "connector.StreamInput", "connector.StreamKeepalive", "connector.TargetChangeMessage", "connector.Url", "connector.XmlApiMessage", "connectorpack.ConnectorPackUpdate", "content.ComplexType", "content.Parameter", "content.TextParameter", "convergedinfra.AlarmSummary", "convergedinfra.ComplianceSummary", "convergedinfra.PodSummary", "crd.CustomResourceConfigProperty", "equipment.IoCardIdentity", "fabric.LldpSettings", "fabric.MacAgingSettings", "fabric.PortIdentifier", "fabric.QosClass", "fabric.UdldGlobalSettings", "fabric.UdldSettings", "fabric.VlanSettings", "fcpool.Block", "feedback.FeedbackData", "firmware.ChassisUpgradeImpact", "firmware.CifsServer", "firmware.ComponentImpact", "firmware.ComponentMeta", "firmware.DirectDownload", "firmware.FabricUpgradeImpact", "firmware.FirmwareInventory", "firmware.HttpServer", "firmware.NetworkShare", "firmware.NfsServer", "firmware.ServerUpgradeImpact", "forecast.Model", "hcl.Constraint", "hcl.Firmware", "hcl.HardwareCompatibilityProfile", "hcl.Product", "hyperflex.AlarmSummary", "hyperflex.AppSettingConstraint", "hyperflex.BackupPolicySettings", "hyperflex.BondState", "hyperflex.DatastoreInfo", "hyperflex.DiskStatus", "hyperflex.EntityReference", "hyperflex.ErrorStack", "hyperflex.FeatureLimitEntry", "hyperflex.FilePath", "hyperflex.HealthCheckScriptInfo", "hyperflex.HxHostMountStatusDt", "hyperflex.HxLicenseAuthorizationDetailsDt", "hyperflex.HxLinkDt", "hyperflex.HxNetworkAddressDt", "hyperflex.HxPlatformDatastoreConfigDt", "hyperflex.HxRegistrationDetailsDt", "hyperflex.HxResiliencyInfoDt", "hyperflex.HxSiteDt", "hyperflex.HxUuIdDt", "hyperflex.HxZoneInfoDt", "hyperflex.HxZoneResiliencyInfoDt", "hyperflex.IpAddrRange", "hyperflex.LogicalAvailabilityZone", "hyperflex.MacAddrPrefixRange", "hyperflex.MapClusterIdToProtectionInfo", "hyperflex.MapClusterIdToStSnapshotPoint", "hyperflex.MapUuidToTrackedDisk", "hyperflex.NamedVlan", "hyperflex.NamedVsan", "hyperflex.NetworkPort", "hyperflex.PortTypeToPortNumberMap", "hyperflex.ProtectionInfo", "hyperflex.ReplicationClusterReferenceToSchedule", "hyperflex.ReplicationPeerInfo", "hyperflex.ReplicationPlatDatastore", "hyperflex.ReplicationPlatDatastorePair", "hyperflex.ReplicationSchedule", "hyperflex.ReplicationStatus", "hyperflex.RpoStatus", "hyperflex.ServerFirmwareVersionInfo", "hyperflex.ServerModelEntry", "hyperflex.SnapshotFiles", "hyperflex.SnapshotInfoBrief", "hyperflex.SnapshotPoint", "hyperflex.SnapshotStatus", "hyperflex.StPlatformClusterHealingInfo", "hyperflex.StPlatformClusterResiliencyInfo", "hyperflex.Summary", "hyperflex.TrackedDisk", "hyperflex.TrackedFile", "hyperflex.VdiskConfig", "hyperflex.VirtualMachine", "hyperflex.VirtualMachineRuntimeInfo", "hyperflex.VmDisk", "hyperflex.VmInterface", "hyperflex.VmProtectionSpaceUsage", "hyperflex.WwxnPrefixRange", "i18n.Message", "i18n.MessageParam", "iaas.LicenseKeysInfo", "iaas.LicenseUtilizationInfo", "iaas.WorkflowSteps", "iam.AccountPermissions", "iam.ClientMeta", "iam.EndPointPasswordProperties", "iam.FeatureDefinition", "iam.GroupPermissionToRoles", "iam.LdapBaseProperties", "iam.LdapDnsParameters", "iam.PermissionReference", "iam.PermissionToRoles", "iam.Rule", "iam.SamlSpConnection", "iam.SsoSessionAttributes", "imcconnector.WebUiMessage", "infra.HardwareInfo", "infra.MetaData", "inventory.InventoryMo", "inventory.UemInfo", "ippool.IpV4Block", "ippool.IpV4Config", "ippool.IpV6Block", "ippool.IpV6Config", "iqnpool.IqnSuffixBlock", "kubernetes.ActionInfo", "kubernetes.Addon", "kubernetes.AddonConfiguration", "kubernetes.BaremetalNetworkInfo", "kubernetes.CalicoConfig", "kubernetes.ClusterCertificateConfiguration", "kubernetes.ClusterManagementConfig", "kubernetes.Configuration", "kubernetes.DaemonSetStatus", "kubernetes.DeploymentStatus", "kubernetes.EssentialAddon", "kubernetes.EsxiVirtualMachineInfraConfig", "kubernetes.Ethernet", "kubernetes.EthernetMatcher", "kubernetes.HyperFlexApVirtualMachineInfraConfig", "kubernetes.IngressStatus", "kubernetes.KeyValue", "kubernetes.LoadBalancer", "kubernetes.NodeAddress", "kubernetes.NodeGroupLabel", "kubernetes.NodeGroupTaint", "kubernetes.NodeInfo", "kubernetes.NodeSpec", "kubernetes.NodeStatus", "kubernetes.ObjectMeta", "kubernetes.OvsBond", "kubernetes.PodStatus", "kubernetes.ProxyConfig", "kubernetes.ServiceStatus", "kubernetes.StatefulSetStatus", "kubernetes.Taint", "macpool.Block", "memory.PersistentMemoryGoal", "memory.PersistentMemoryLocalSecurity", "memory.PersistentMemoryLogicalNamespace", "meta.AccessPrivilege", "meta.DisplayNameDefinition", "meta.IdentityDefinition", "meta.PropDefinition", "meta.RelationshipDefinition", "mo.MoRef", "mo.Tag", "mo.VersionContext", "niaapi.Detail", "niaapi.NewReleaseDetail", "niaapi.RevisionInfo", "niaapi.SoftwareRegex", "niaapi.VersionRegexPlatform", "niatelemetry.BootflashDetails", "niatelemetry.Diskinfo", "niatelemetry.Interface", "niatelemetry.InterfaceElement", "niatelemetry.LogicalLink", "niatelemetry.NvePacketCounters", "niatelemetry.NveVni", "niatelemetry.NxosBgpMvpn", "niatelemetry.NxosVtp", "niatelemetry.SmartLicense", "notification.AlarmMoCondition", "notification.SendEmail", "ntp.AuthNtpServer", "onprem.ImagePackage", "onprem.Schedule", "onprem.UpgradeNote", "onprem.UpgradePhase", "oprs.Kvpair", "os.Answers", "os.GlobalConfig", "os.Ipv4Configuration", "os.Ipv6Configuration", "os.PhysicalDisk", "os.PhysicalDiskResponse", "os.PlaceHolder", "os.ServerConfig", "os.ValidationInformation", "os.VirtualDrive", "os.VirtualDriveResponse", "os.WindowsParameters", "pkix.DistinguishedName", "pkix.EcdsaKeySpec", "pkix.EddsaKeySpec", "pkix.RsaAlgorithm", "pkix.SubjectAlternateName", "policy.ActionQualifier", "policy.ConfigChange", "policy.ConfigChangeContext", "policy.ConfigContext", "policy.ConfigResultContext", "policy.Qualifier", "policyinventory.JobInfo", "recovery.BackupSchedule", "resource.PerTypeCombinedSelector", "resource.Selector", "resource.SourceToPermissionResources", "resource.SourceToPermissionResourcesHolder", "resourcepool.ServerLeaseParameters", "resourcepool.ServerPoolParameters", "sdcard.Diagnostics", "sdcard.Drivers", "sdcard.HostUpgradeUtility", "sdcard.OperatingSystem", "sdcard.Partition", "sdcard.ServerConfigurationUtility", "sdcard.UserPartition", "sdwan.NetworkConfigurationType", "sdwan.TemplateInputsType", "server.PendingWorkflowTrigger", "snmp.Trap", "snmp.User", "softwarerepository.ApplianceUpload", "softwarerepository.CifsServer", "softwarerepository.ConstraintModels", "softwarerepository.HttpServer", "softwarerepository.ImportResult", "softwarerepository.LocalMachine", "softwarerepository.NfsServer", "storage.AutomaticDriveGroup", "storage.HitachiArrayUtilization", "storage.HitachiCapacity", "storage.HitachiInitiator", "storage.Initiator", "storage.KeySetting", "storage.LocalKeySetting", "storage.M2VirtualDriveConfig", "storage.ManualDriveGroup", "storage.NetAppEthernetPortLag", "storage.NetAppEthernetPortVlan", "storage.NetAppExportPolicyRule", "storage.NetAppHighAvailability", "storage.NetAppPerformanceMetricsAverage", "storage.NetAppPort", "storage.NetAppStorageClusterEfficiency", "storage.NetAppStorageUtilization", "storage.PureArrayUtilization", "storage.PureDiskUtilization", "storage.PureHostUtilization", "storage.PureReplicationBlackout", "storage.PureVolumeUtilization", "storage.R0Drive", "storage.RemoteKeySetting", "storage.SpanDrives", "storage.StorageContainerHostMountStatus", "storage.StorageContainerUtilization", "storage.VirtualDriveConfiguration", "storage.VirtualDrivePolicy", "storage.VolumeUtilization", "syslog.LocalFileLoggingClient", "syslog.RemoteLoggingClient", "tam.Action", "tam.ApiDataSource", "tam.Identifiers", "tam.PsirtSeverity", "tam.QueryEntry", "tam.S3DataSource", "tam.SecurityAdvisoryDetails", "tam.TextFsmTemplateDataSource", "techsupportmanagement.ApplianceParam", "techsupportmanagement.NiaParam", "techsupportmanagement.PlatformParam", "template.TransformationStage", "terraform.CloudResource", "terraform.Runstate", "ucsd.ConnectorPack", "ucsd.UcsdRestoreParameters", "ucsdconnector.RestClientMessage", "uuidpool.UuidBlock", "virtualization.ActionInfo", "virtualization.AwsVmComputeConfiguration", "virtualization.AwsVmConfiguration", "virtualization.AwsVmNetworkConfiguration", "virtualization.AwsVmStorageConfiguration", "virtualization.CloudInitConfig", "virtualization.ComputeCapacity", "virtualization.CpuAllocation", "virtualization.CpuInfo", "virtualization.EsxiCloneCustomSpec", "virtualization.EsxiOvaCustomSpec", "virtualization.EsxiVmComputeConfiguration", "virtualization.EsxiVmConfiguration", "virtualization.EsxiVmNetworkConfiguration", "virtualization.EsxiVmStorageConfiguration", "virtualization.GuestInfo", "virtualization.HxapVmConfiguration", "virtualization.IpAddressInfo", "virtualization.MemoryAllocation", "virtualization.MemoryCapacity", "virtualization.NetworkInterface", "virtualization.ProductInfo", "virtualization.StorageCapacity", "virtualization.VirtualDiskConfig", "virtualization.VirtualMachineDisk", "virtualization.VmEsxiDisk", "virtualization.VmwareRemoteDisplayInfo", "virtualization.VmwareResourceConsumption", "virtualization.VmwareSharesInfo", "virtualization.VmwareTeamingAndFailover", "virtualization.VmwareVlanRange", "virtualization.VmwareVmCpuShareInfo", "virtualization.VmwareVmCpuSocketInfo", "virtualization.VmwareVmDiskCommitInfo", "virtualization.VmwareVmMemoryShareInfo", "virtualization.VolumeInfo", "vmedia.Mapping", "vnic.ArfsSettings", "vnic.Cdn", "vnic.CompletionQueueSettings", "vnic.EthInterruptSettings", "vnic.EthRxQueueSettings", "vnic.EthTxQueueSettings", "vnic.FcErrorRecoverySettings", "vnic.FcInterruptSettings", "vnic.FcQueueSettings", "vnic.FlogiSettings", "vnic.IscsiAuthProfile", "vnic.Lun", "vnic.NvgreSettings", "vnic.PlacementSettings", "vnic.PlogiSettings", "vnic.RoceSettings", "vnic.RssHashSettings", "vnic.ScsiQueueSettings", "vnic.TcpOffloadSettings", "vnic.UsnicSettings", "vnic.VifStatus", "vnic.VlanSettings", "vnic.VmqSettings", "vnic.VsanSettings", "vnic.VxlanSettings", "workflow.ActionWorkflowDefinition", "workflow.ArrayDataType", "workflow.AssociatedRoles", "workflow.CliCommand", "workflow.Comments", "workflow.Constraints", "workflow.CustomArrayItem", "workflow.CustomDataProperty", "workflow.CustomDataType", "workflow.CustomDataTypeProperties", "workflow.DecisionCase", "workflow.DecisionTask", "workflow.DefaultValue", "workflow.DisplayMeta", "workflow.DynamicWorkflowActionTaskList", "workflow.EnumEntry", "workflow.ExpectPrompt", "workflow.FailureEndTask", "workflow.FileDownloadOp", "workflow.FileOperations", "workflow.FileTemplateOp", "workflow.FileTransfer", "workflow.ForkTask", "workflow.InitiatorContext", "workflow.InternalProperties", "workflow.JoinTask", "workflow.LoopTask", "workflow.Message", "workflow.MoReferenceArrayItem", "workflow.MoReferenceDataType", "workflow.MoReferenceProperty", "workflow.ParameterSet", "workflow.PrimitiveArrayItem", "workflow.PrimitiveDataProperty", "workflow.PrimitiveDataType", "workflow.Properties", "workflow.ResultHandler", "workflow.RollbackTask", "workflow.RollbackWorkflowTask", "workflow.SelectorProperty", "workflow.SshCmd", "workflow.SshConfig", "workflow.SshSession", "workflow.StartTask", "workflow.SubWorkflowTask", "workflow.SuccessEndTask", "workflow.TargetContext", "workflow.TargetDataType", "workflow.TargetProperty", "workflow.TaskConstraints", "workflow.TaskRetryInfo", "workflow.UiInputFilter", "workflow.ValidationError", "workflow.ValidationInformation", "workflow.WaitTask", "workflow.WaitTaskPrompt", "workflow.WebApi", "workflow.WorkerTask", "workflow.WorkflowCtx", "workflow.WorkflowEngineProperties", "workflow.WorkflowInfoProperties", "workflow.WorkflowProperties", "workflow.XmlApi", "x509.Certificate"])
      unless validator.valid?(class_id)
        fail ArgumentError, "invalid value for \"class_id\", must be one of #{validator.allowable_values}."
      end
      @class_id = class_id
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] object_type Object to be assigned
    def object_type=(object_type)
      validator = EnumAttributeValidator.new('String', ["access.AddressType", "adapter.AdapterConfig", "adapter.DceInterfaceSettings", "adapter.EthSettings", "adapter.FcSettings", "adapter.PortChannelSettings", "appliance.ApiStatus", "appliance.CertRenewalPhase", "appliance.KeyValuePair", "appliance.StatusCheck", "asset.AddressInformation", "asset.ApiKeyCredential", "asset.ClientCertificateCredential", "asset.CloudConnection", "asset.ConnectionControlMessage", "asset.ContractInformation", "asset.CustomerInformation", "asset.DeploymentAlarmInfo", "asset.DeploymentDeviceAlarmInfo", "asset.DeploymentDeviceInformation", "asset.DeviceInformation", "asset.DeviceStatistics", "asset.DeviceTransaction", "asset.GlobalUltimate", "asset.HttpConnection", "asset.IntersightDeviceConnectorConnection", "asset.MeteringType", "asset.NewRelicCredential", "asset.NoAuthenticationCredential", "asset.OauthBearerTokenCredential", "asset.OauthClientIdSecretCredential", "asset.OrchestrationHitachiVirtualStoragePlatformOptions", "asset.OrchestrationService", "asset.ParentConnectionSignature", "asset.PrivateKeyCredential", "asset.ProductInformation", "asset.ServiceNowCredential", "asset.SshConnection", "asset.SudiInfo", "asset.TargetKey", "asset.TargetSignature", "asset.TargetStatusDetails", "asset.TerraformIntegrationService", "asset.TerraformIntegrationTerraformAgentOptions", "asset.TerraformIntegrationTerraformCloudOptions", "asset.UsernamePasswordCredential", "asset.VirtualizationAmazonWebServiceOptions", "asset.VirtualizationService", "asset.VmHost", "asset.WorkloadOptimizerAmazonWebServicesBillingOptions", "asset.WorkloadOptimizerHypervOptions", "asset.WorkloadOptimizerMicrosoftAzureApplicationInsightsOptions", "asset.WorkloadOptimizerMicrosoftAzureEnterpriseAgreementOptions", "asset.WorkloadOptimizerMicrosoftAzureServicePrincipalOptions", "asset.WorkloadOptimizerNewRelicOptions", "asset.WorkloadOptimizerOpenStackOptions", "asset.WorkloadOptimizerRedHatOpenStackOptions", "asset.WorkloadOptimizerService", "asset.WorkloadOptimizerVmwareVcenterOptions", "boot.Bootloader", "boot.Iscsi", "boot.LocalCdd", "boot.LocalDisk", "boot.Nvme", "boot.PchStorage", "boot.Pxe", "boot.San", "boot.SdCard", "boot.UefiShell", "boot.Usb", "boot.VirtualMedia", "bulk.HttpHeader", "bulk.RestResult", "bulk.RestSubRequest", "capability.PortRange", "capability.SwitchNetworkLimits", "capability.SwitchStorageLimits", "capability.SwitchSystemLimits", "capability.SwitchingModeCapability", "certificatemanagement.Imc", "cloud.AvailabilityZone", "cloud.BillingUnit", "cloud.CloudRegion", "cloud.CloudTag", "cloud.CustomAttributes", "cloud.ImageReference", "cloud.InstanceType", "cloud.NetworkAccessConfig", "cloud.NetworkAddress", "cloud.NetworkInstanceAttachment", "cloud.NetworkInterfaceAttachment", "cloud.SecurityGroupRule", "cloud.TfcWorkspaceVariables", "cloud.VolumeAttachment", "cloud.VolumeInstanceAttachment", "cloud.VolumeIopsInfo", "cloud.VolumeType", "cmrf.CmRf", "comm.IpV4AddressBlock", "comm.IpV4Interface", "comm.IpV6Interface", "compute.AlarmSummary", "compute.IpAddress", "compute.PersistentMemoryModule", "compute.PersistentMemoryOperation", "compute.ServerConfig", "compute.StorageControllerOperation", "compute.StoragePhysicalDrive", "compute.StoragePhysicalDriveOperation", "compute.StorageVirtualDrive", "compute.StorageVirtualDriveOperation", "cond.AlarmSummary", "connector.CloseStreamMessage", "connector.CommandControlMessage", "connector.CommandTerminalStream", "connector.ExpectPrompt", "connector.FetchStreamMessage", "connector.FileChecksum", "connector.FileMessage", "connector.HttpRequest", "connector.SshConfig", "connector.SshMessage", "connector.StartStream", "connector.StartStreamFromDevice", "connector.StreamAcknowledge", "connector.StreamInput", "connector.StreamKeepalive", "connector.TargetChangeMessage", "connector.Url", "connector.XmlApiMessage", "connectorpack.ConnectorPackUpdate", "content.ComplexType", "content.Parameter", "content.TextParameter", "convergedinfra.AlarmSummary", "convergedinfra.ComplianceSummary", "convergedinfra.PodSummary", "crd.CustomResourceConfigProperty", "equipment.IoCardIdentity", "fabric.LldpSettings", "fabric.MacAgingSettings", "fabric.PortIdentifier", "fabric.QosClass", "fabric.UdldGlobalSettings", "fabric.UdldSettings", "fabric.VlanSettings", "fcpool.Block", "feedback.FeedbackData", "firmware.ChassisUpgradeImpact", "firmware.CifsServer", "firmware.ComponentImpact", "firmware.ComponentMeta", "firmware.DirectDownload", "firmware.FabricUpgradeImpact", "firmware.FirmwareInventory", "firmware.HttpServer", "firmware.NetworkShare", "firmware.NfsServer", "firmware.ServerUpgradeImpact", "forecast.Model", "hcl.Constraint", "hcl.Firmware", "hcl.HardwareCompatibilityProfile", "hcl.Product", "hyperflex.AlarmSummary", "hyperflex.AppSettingConstraint", "hyperflex.BackupPolicySettings", "hyperflex.BondState", "hyperflex.DatastoreInfo", "hyperflex.DiskStatus", "hyperflex.EntityReference", "hyperflex.ErrorStack", "hyperflex.FeatureLimitEntry", "hyperflex.FilePath", "hyperflex.HealthCheckScriptInfo", "hyperflex.HxHostMountStatusDt", "hyperflex.HxLicenseAuthorizationDetailsDt", "hyperflex.HxLinkDt", "hyperflex.HxNetworkAddressDt", "hyperflex.HxPlatformDatastoreConfigDt", "hyperflex.HxRegistrationDetailsDt", "hyperflex.HxResiliencyInfoDt", "hyperflex.HxSiteDt", "hyperflex.HxUuIdDt", "hyperflex.HxZoneInfoDt", "hyperflex.HxZoneResiliencyInfoDt", "hyperflex.IpAddrRange", "hyperflex.LogicalAvailabilityZone", "hyperflex.MacAddrPrefixRange", "hyperflex.MapClusterIdToProtectionInfo", "hyperflex.MapClusterIdToStSnapshotPoint", "hyperflex.MapUuidToTrackedDisk", "hyperflex.NamedVlan", "hyperflex.NamedVsan", "hyperflex.NetworkPort", "hyperflex.PortTypeToPortNumberMap", "hyperflex.ProtectionInfo", "hyperflex.ReplicationClusterReferenceToSchedule", "hyperflex.ReplicationPeerInfo", "hyperflex.ReplicationPlatDatastore", "hyperflex.ReplicationPlatDatastorePair", "hyperflex.ReplicationSchedule", "hyperflex.ReplicationStatus", "hyperflex.RpoStatus", "hyperflex.ServerFirmwareVersionInfo", "hyperflex.ServerModelEntry", "hyperflex.SnapshotFiles", "hyperflex.SnapshotInfoBrief", "hyperflex.SnapshotPoint", "hyperflex.SnapshotStatus", "hyperflex.StPlatformClusterHealingInfo", "hyperflex.StPlatformClusterResiliencyInfo", "hyperflex.Summary", "hyperflex.TrackedDisk", "hyperflex.TrackedFile", "hyperflex.VdiskConfig", "hyperflex.VirtualMachine", "hyperflex.VirtualMachineRuntimeInfo", "hyperflex.VmDisk", "hyperflex.VmInterface", "hyperflex.VmProtectionSpaceUsage", "hyperflex.WwxnPrefixRange", "i18n.Message", "i18n.MessageParam", "iaas.LicenseKeysInfo", "iaas.LicenseUtilizationInfo", "iaas.WorkflowSteps", "iam.AccountPermissions", "iam.ClientMeta", "iam.EndPointPasswordProperties", "iam.FeatureDefinition", "iam.GroupPermissionToRoles", "iam.LdapBaseProperties", "iam.LdapDnsParameters", "iam.PermissionReference", "iam.PermissionToRoles", "iam.Rule", "iam.SamlSpConnection", "iam.SsoSessionAttributes", "imcconnector.WebUiMessage", "infra.HardwareInfo", "infra.MetaData", "inventory.InventoryMo", "inventory.UemInfo", "ippool.IpV4Block", "ippool.IpV4Config", "ippool.IpV6Block", "ippool.IpV6Config", "iqnpool.IqnSuffixBlock", "kubernetes.ActionInfo", "kubernetes.Addon", "kubernetes.AddonConfiguration", "kubernetes.BaremetalNetworkInfo", "kubernetes.CalicoConfig", "kubernetes.ClusterCertificateConfiguration", "kubernetes.ClusterManagementConfig", "kubernetes.Configuration", "kubernetes.DaemonSetStatus", "kubernetes.DeploymentStatus", "kubernetes.EssentialAddon", "kubernetes.EsxiVirtualMachineInfraConfig", "kubernetes.Ethernet", "kubernetes.EthernetMatcher", "kubernetes.HyperFlexApVirtualMachineInfraConfig", "kubernetes.IngressStatus", "kubernetes.KeyValue", "kubernetes.LoadBalancer", "kubernetes.NodeAddress", "kubernetes.NodeGroupLabel", "kubernetes.NodeGroupTaint", "kubernetes.NodeInfo", "kubernetes.NodeSpec", "kubernetes.NodeStatus", "kubernetes.ObjectMeta", "kubernetes.OvsBond", "kubernetes.PodStatus", "kubernetes.ProxyConfig", "kubernetes.ServiceStatus", "kubernetes.StatefulSetStatus", "kubernetes.Taint", "macpool.Block", "memory.PersistentMemoryGoal", "memory.PersistentMemoryLocalSecurity", "memory.PersistentMemoryLogicalNamespace", "meta.AccessPrivilege", "meta.DisplayNameDefinition", "meta.IdentityDefinition", "meta.PropDefinition", "meta.RelationshipDefinition", "mo.MoRef", "mo.Tag", "mo.VersionContext", "niaapi.Detail", "niaapi.NewReleaseDetail", "niaapi.RevisionInfo", "niaapi.SoftwareRegex", "niaapi.VersionRegexPlatform", "niatelemetry.BootflashDetails", "niatelemetry.Diskinfo", "niatelemetry.Interface", "niatelemetry.InterfaceElement", "niatelemetry.LogicalLink", "niatelemetry.NvePacketCounters", "niatelemetry.NveVni", "niatelemetry.NxosBgpMvpn", "niatelemetry.NxosVtp", "niatelemetry.SmartLicense", "notification.AlarmMoCondition", "notification.SendEmail", "ntp.AuthNtpServer", "onprem.ImagePackage", "onprem.Schedule", "onprem.UpgradeNote", "onprem.UpgradePhase", "oprs.Kvpair", "os.Answers", "os.GlobalConfig", "os.Ipv4Configuration", "os.Ipv6Configuration", "os.PhysicalDisk", "os.PhysicalDiskResponse", "os.PlaceHolder", "os.ServerConfig", "os.ValidationInformation", "os.VirtualDrive", "os.VirtualDriveResponse", "os.WindowsParameters", "pkix.DistinguishedName", "pkix.EcdsaKeySpec", "pkix.EddsaKeySpec", "pkix.RsaAlgorithm", "pkix.SubjectAlternateName", "policy.ActionQualifier", "policy.ConfigChange", "policy.ConfigChangeContext", "policy.ConfigContext", "policy.ConfigResultContext", "policy.Qualifier", "policyinventory.JobInfo", "recovery.BackupSchedule", "resource.PerTypeCombinedSelector", "resource.Selector", "resource.SourceToPermissionResources", "resource.SourceToPermissionResourcesHolder", "resourcepool.ServerLeaseParameters", "resourcepool.ServerPoolParameters", "sdcard.Diagnostics", "sdcard.Drivers", "sdcard.HostUpgradeUtility", "sdcard.OperatingSystem", "sdcard.Partition", "sdcard.ServerConfigurationUtility", "sdcard.UserPartition", "sdwan.NetworkConfigurationType", "sdwan.TemplateInputsType", "server.PendingWorkflowTrigger", "snmp.Trap", "snmp.User", "softwarerepository.ApplianceUpload", "softwarerepository.CifsServer", "softwarerepository.ConstraintModels", "softwarerepository.HttpServer", "softwarerepository.ImportResult", "softwarerepository.LocalMachine", "softwarerepository.NfsServer", "storage.AutomaticDriveGroup", "storage.HitachiArrayUtilization", "storage.HitachiCapacity", "storage.HitachiInitiator", "storage.Initiator", "storage.KeySetting", "storage.LocalKeySetting", "storage.M2VirtualDriveConfig", "storage.ManualDriveGroup", "storage.NetAppEthernetPortLag", "storage.NetAppEthernetPortVlan", "storage.NetAppExportPolicyRule", "storage.NetAppHighAvailability", "storage.NetAppPerformanceMetricsAverage", "storage.NetAppPort", "storage.NetAppStorageClusterEfficiency", "storage.NetAppStorageUtilization", "storage.PureArrayUtilization", "storage.PureDiskUtilization", "storage.PureHostUtilization", "storage.PureReplicationBlackout", "storage.PureVolumeUtilization", "storage.R0Drive", "storage.RemoteKeySetting", "storage.SpanDrives", "storage.StorageContainerHostMountStatus", "storage.StorageContainerUtilization", "storage.VirtualDriveConfiguration", "storage.VirtualDrivePolicy", "storage.VolumeUtilization", "syslog.LocalFileLoggingClient", "syslog.RemoteLoggingClient", "tam.Action", "tam.ApiDataSource", "tam.Identifiers", "tam.PsirtSeverity", "tam.QueryEntry", "tam.S3DataSource", "tam.SecurityAdvisoryDetails", "tam.TextFsmTemplateDataSource", "techsupportmanagement.ApplianceParam", "techsupportmanagement.NiaParam", "techsupportmanagement.PlatformParam", "template.TransformationStage", "terraform.CloudResource", "terraform.Runstate", "ucsd.ConnectorPack", "ucsd.UcsdRestoreParameters", "ucsdconnector.RestClientMessage", "uuidpool.UuidBlock", "virtualization.ActionInfo", "virtualization.AwsVmComputeConfiguration", "virtualization.AwsVmConfiguration", "virtualization.AwsVmNetworkConfiguration", "virtualization.AwsVmStorageConfiguration", "virtualization.CloudInitConfig", "virtualization.ComputeCapacity", "virtualization.CpuAllocation", "virtualization.CpuInfo", "virtualization.EsxiCloneCustomSpec", "virtualization.EsxiOvaCustomSpec", "virtualization.EsxiVmComputeConfiguration", "virtualization.EsxiVmConfiguration", "virtualization.EsxiVmNetworkConfiguration", "virtualization.EsxiVmStorageConfiguration", "virtualization.GuestInfo", "virtualization.HxapVmConfiguration", "virtualization.IpAddressInfo", "virtualization.MemoryAllocation", "virtualization.MemoryCapacity", "virtualization.NetworkInterface", "virtualization.ProductInfo", "virtualization.StorageCapacity", "virtualization.VirtualDiskConfig", "virtualization.VirtualMachineDisk", "virtualization.VmEsxiDisk", "virtualization.VmwareRemoteDisplayInfo", "virtualization.VmwareResourceConsumption", "virtualization.VmwareSharesInfo", "virtualization.VmwareTeamingAndFailover", "virtualization.VmwareVlanRange", "virtualization.VmwareVmCpuShareInfo", "virtualization.VmwareVmCpuSocketInfo", "virtualization.VmwareVmDiskCommitInfo", "virtualization.VmwareVmMemoryShareInfo", "virtualization.VolumeInfo", "vmedia.Mapping", "vnic.ArfsSettings", "vnic.Cdn", "vnic.CompletionQueueSettings", "vnic.EthInterruptSettings", "vnic.EthRxQueueSettings", "vnic.EthTxQueueSettings", "vnic.FcErrorRecoverySettings", "vnic.FcInterruptSettings", "vnic.FcQueueSettings", "vnic.FlogiSettings", "vnic.IscsiAuthProfile", "vnic.Lun", "vnic.NvgreSettings", "vnic.PlacementSettings", "vnic.PlogiSettings", "vnic.RoceSettings", "vnic.RssHashSettings", "vnic.ScsiQueueSettings", "vnic.TcpOffloadSettings", "vnic.UsnicSettings", "vnic.VifStatus", "vnic.VlanSettings", "vnic.VmqSettings", "vnic.VsanSettings", "vnic.VxlanSettings", "workflow.ActionWorkflowDefinition", "workflow.ArrayDataType", "workflow.AssociatedRoles", "workflow.CliCommand", "workflow.Comments", "workflow.Constraints", "workflow.CustomArrayItem", "workflow.CustomDataProperty", "workflow.CustomDataType", "workflow.CustomDataTypeProperties", "workflow.DecisionCase", "workflow.DecisionTask", "workflow.DefaultValue", "workflow.DisplayMeta", "workflow.DynamicWorkflowActionTaskList", "workflow.EnumEntry", "workflow.ExpectPrompt", "workflow.FailureEndTask", "workflow.FileDownloadOp", "workflow.FileOperations", "workflow.FileTemplateOp", "workflow.FileTransfer", "workflow.ForkTask", "workflow.InitiatorContext", "workflow.InternalProperties", "workflow.JoinTask", "workflow.LoopTask", "workflow.Message", "workflow.MoReferenceArrayItem", "workflow.MoReferenceDataType", "workflow.MoReferenceProperty", "workflow.ParameterSet", "workflow.PrimitiveArrayItem", "workflow.PrimitiveDataProperty", "workflow.PrimitiveDataType", "workflow.Properties", "workflow.ResultHandler", "workflow.RollbackTask", "workflow.RollbackWorkflowTask", "workflow.SelectorProperty", "workflow.SshCmd", "workflow.SshConfig", "workflow.SshSession", "workflow.StartTask", "workflow.SubWorkflowTask", "workflow.SuccessEndTask", "workflow.TargetContext", "workflow.TargetDataType", "workflow.TargetProperty", "workflow.TaskConstraints", "workflow.TaskRetryInfo", "workflow.UiInputFilter", "workflow.ValidationError", "workflow.ValidationInformation", "workflow.WaitTask", "workflow.WaitTaskPrompt", "workflow.WebApi", "workflow.WorkerTask", "workflow.WorkflowCtx", "workflow.WorkflowEngineProperties", "workflow.WorkflowInfoProperties", "workflow.WorkflowProperties", "workflow.XmlApi", "x509.Certificate"])
      unless validator.valid?(object_type)
        fail ArgumentError, "invalid value for \"object_type\", must be one of #{validator.allowable_values}."
      end
      @object_type = object_type
    end

    # Checks equality by comparing each attribute.
    # @param [Object] Object to be compared
    def ==(o)
      return true if self.equal?(o)
      self.class == o.class &&
          class_id == o.class_id &&
          object_type == o.object_type
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Calculates hash code according to all attributes.
    # @return [Integer] Hash code
    def hash
      [class_id, object_type].hash
    end

    # Builds the object from hash
    # @param [Hash] attributes Model attributes in the form of hash
    # @return [Object] Returns the model itself
    def self.build_from_hash(attributes)
      new.build_from_hash(attributes)
    end

    # Builds the object from hash
    # @param [Hash] attributes Model attributes in the form of hash
    # @return [Object] Returns the model itself
    def build_from_hash(attributes)
      return nil unless attributes.is_a?(Hash)
      MoBaseComplexType.openapi_types.each_pair do |key, type|
        if attributes[MoBaseComplexType.attribute_map[key]].nil? && MoBaseComplexType.openapi_nullable.include?(key)
          self.send("#{key}=", nil)
        elsif type =~ /\AArray<(.*)>/i
          # check to ensure the input is an array given that the attribute
          # is documented as an array but the input is not
          if attributes[MoBaseComplexType.attribute_map[key]].is_a?(Array)
            self.send("#{key}=", attributes[MoBaseComplexType.attribute_map[key]].map { |v| _deserialize($1, v) })
          end
        elsif !attributes[MoBaseComplexType.attribute_map[key]].nil?
          self.send("#{key}=", _deserialize(type, attributes[MoBaseComplexType.attribute_map[key]]))
        end
      end

      self
    end

    # Deserializes the data based on type
    # @param string type Data type
    # @param string value Value to be deserialized
    # @return [Object] Deserialized data
    def _deserialize(type, value)
      case type.to_sym
      when :Time
        Time.parse(value)
      when :Date
        Date.parse(value)
      when :String
        value.to_s
      when :Integer
        value.to_i
      when :Float
        value.to_f
      when :Boolean
        if value.to_s =~ /\A(true|t|yes|y|1)\z/i
          true
        else
          false
        end
      when :Object
        # generic object (usually a Hash), return directly
        value
      when /\AArray<(?<inner_type>.+)>\z/
        inner_type = Regexp.last_match[:inner_type]
        value.map { |v| _deserialize(inner_type, v) }
      when /\AHash<(?<k_type>.+?), (?<v_type>.+)>\z/
        k_type = Regexp.last_match[:k_type]
        v_type = Regexp.last_match[:v_type]
        {}.tap do |hash|
          value.each do |k, v|
            hash[_deserialize(k_type, k)] = _deserialize(v_type, v)
          end
        end
      else # model
        # models (e.g. Pet) or oneOf
        klass = IntersightClient.const_get(type)
        klass.respond_to?(:openapi_one_of) ? klass.build(value) : klass.build_from_hash(value)
      end
    end

    # Returns the string representation of the object
    # @return [String] String presentation of the object
    def to_s
      to_hash.to_s
    end

    # to_body is an alias to to_hash (backward compatibility)
    # @return [Hash] Returns the object in the form of hash
    def to_body
      to_hash
    end

    # Returns the object in the form of hash
    # @return [Hash] Returns the object in the form of hash
    def to_hash
      hash = {}
      MoBaseComplexType.attribute_map.each_pair do |attr, param|
        value = self.send(attr)
        if value.nil?
          is_nullable = MoBaseComplexType.openapi_nullable.include?(attr)
          next if !is_nullable || (is_nullable && !instance_variable_defined?(:"@#{attr}"))
        end

        hash[param] = _to_hash(value)
      end
      hash
    end

    # Outputs non-array value in the form of hash
    # For object, use to_hash. Otherwise, just return the value
    # @param [Object] value Any valid value
    # @return [Hash] Returns the value in the form of hash
    def _to_hash(value)
      if value.is_a?(Array)
        value.compact.map { |v| _to_hash(v) }
      elsif value.is_a?(Hash)
        {}.tap do |hash|
          value.each { |k, v| hash[k] = _to_hash(v) }
        end
      elsif value.respond_to? :to_hash
        value.to_hash
      else
        value
      end
    end

  end

end
