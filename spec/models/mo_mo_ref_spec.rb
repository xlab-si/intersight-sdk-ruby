=begin
#Cisco Intersight

#Cisco Intersight is a management platform delivered as a service with embedded analytics for your Cisco and 3rd party IT infrastructure. This platform offers an intelligent level of management that enables IT organizations to analyze, simplify, and automate their environments in more advanced ways than the prior generations of tools. Cisco Intersight provides an integrated and intuitive management experience for resources in the traditional data center as well as at the edge. With flexible deployment options to address complex security needs, getting started with Intersight is quick and easy. Cisco Intersight has deep integration with Cisco UCS and HyperFlex systems allowing for remote deployment, configuration, and ongoing maintenance. The model-based deployment works for a single system in a remote location or hundreds of systems in a data center and enables rapid, standardized configuration and deployment. It also streamlines maintaining those systems whether you are working with small or very large configurations. The Intersight OpenAPI document defines the complete set of properties that are returned in the HTTP response. From that perspective, a client can expect that no additional properties are returned, unless these properties are explicitly defined in the OpenAPI document. However, when a client uses an older version of the Intersight OpenAPI document, the server may send additional properties because the software is more recent than the client. In that case, the client may receive properties that it does not know about. Some generated SDKs perform a strict validation of the HTTP response body against the OpenAPI document. This document was created on 2021-10-20T11:22:53Z.

The version of the OpenAPI document: 1.0.9-4870
Contact: intersight@cisco.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.3.1

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for IntersightClient::MoMoRef
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe IntersightClient::MoMoRef do
  let(:instance) { IntersightClient::MoMoRef.new }

  describe 'test an instance of MoMoRef' do
    it 'should create an instance of MoMoRef' do
      expect(instance).to be_instance_of(IntersightClient::MoMoRef)
    end
  end
  describe 'test attribute "class_id"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["mo.MoRef"])
      # validator.allowable_values.each do |value|
      #   expect { instance.class_id = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "object_type"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["aaa.AuditRecord", "aaa.RetentionConfig", "aaa.RetentionPolicy", "access.Policy", "adapter.ConfigPolicy", "adapter.ExtEthInterface", "adapter.HostEthInterface", "adapter.HostFcInterface", "adapter.HostIscsiInterface", "adapter.Unit", "adapter.UnitExpander", "appliance.AppStatus", "appliance.AutoRmaPolicy", "appliance.Backup", "appliance.BackupPolicy", "appliance.CertificateSetting", "appliance.DataExportPolicy", "appliance.DeviceCertificate", "appliance.DeviceClaim", "appliance.DeviceUpgradePolicy", "appliance.DiagSetting", "appliance.ExternalSyslogSetting", "appliance.FileGateway", "appliance.FileSystemStatus", "appliance.GroupStatus", "appliance.ImageBundle", "appliance.NodeInfo", "appliance.NodeStatus", "appliance.ReleaseNote", "appliance.RemoteFileImport", "appliance.Restore", "appliance.SetupInfo", "appliance.SystemInfo", "appliance.SystemStatus", "appliance.Upgrade", "appliance.UpgradePolicy", "asset.ClusterMember", "asset.Deployment", "asset.DeploymentDevice", "asset.DeviceClaim", "asset.DeviceConfiguration", "asset.DeviceConnectorManager", "asset.DeviceContractInformation", "asset.DeviceRegistration", "asset.Subscription", "asset.SubscriptionAccount", "asset.SubscriptionDeviceContractInformation", "asset.Target", "bios.BootDevice", "bios.BootMode", "bios.Policy", "bios.SystemBootOrder", "bios.TokenSettings", "bios.Unit", "bios.VfSelectMemoryRasConfiguration", "boot.CddDevice", "boot.DeviceBootMode", "boot.DeviceBootSecurity", "boot.HddDevice", "boot.IscsiDevice", "boot.NvmeDevice", "boot.PchStorageDevice", "boot.PrecisionPolicy", "boot.PxeDevice", "boot.SanDevice", "boot.SdDevice", "boot.UefiShellDevice", "boot.UsbDevice", "boot.VmediaDevice", "bulk.Export", "bulk.ExportedItem", "bulk.MoCloner", "bulk.MoMerger", "bulk.Request", "bulk.SubRequestObj", "capability.AdapterUnitDescriptor", "capability.Catalog", "capability.ChassisDescriptor", "capability.ChassisManufacturingDef", "capability.CimcFirmwareDescriptor", "capability.EquipmentPhysicalDef", "capability.EquipmentSlotArray", "capability.FanModuleDescriptor", "capability.FanModuleManufacturingDef", "capability.IoCardCapabilityDef", "capability.IoCardDescriptor", "capability.IoCardManufacturingDef", "capability.PortGroupAggregationDef", "capability.PsuDescriptor", "capability.PsuManufacturingDef", "capability.ServerSchemaDescriptor", "capability.SiocModuleCapabilityDef", "capability.SiocModuleDescriptor", "capability.SiocModuleManufacturingDef", "capability.SwitchCapability", "capability.SwitchDescriptor", "capability.SwitchManufacturingDef", "certificatemanagement.Policy", "chassis.ConfigChangeDetail", "chassis.ConfigImport", "chassis.ConfigResult", "chassis.ConfigResultEntry", "chassis.IomProfile", "chassis.Profile", "cloud.AwsBillingUnit", "cloud.AwsKeyPair", "cloud.AwsNetworkInterface", "cloud.AwsOrganizationalUnit", "cloud.AwsSecurityGroup", "cloud.AwsSubnet", "cloud.AwsVirtualMachine", "cloud.AwsVolume", "cloud.AwsVpc", "cloud.CollectInventory", "cloud.Regions", "cloud.SkuContainerType", "cloud.SkuDatabaseType", "cloud.SkuInstanceType", "cloud.SkuNetworkType", "cloud.SkuRegionRateCards", "cloud.SkuVolumeType", "cloud.TfcAgentpool", "cloud.TfcOrganization", "cloud.TfcWorkspace", "comm.HttpProxyPolicy", "compute.BiosPostPolicy", "compute.Blade", "compute.BladeIdentity", "compute.Board", "compute.Mapping", "compute.PhysicalSummary", "compute.RackUnit", "compute.RackUnitIdentity", "compute.ServerPowerPolicy", "compute.ServerSetting", "compute.Vmedia", "cond.Alarm", "cond.AlarmAggregation", "cond.HclStatus", "cond.HclStatusDetail", "cond.HclStatusJob", "connectorpack.ConnectorPackUpgrade", "connectorpack.UpgradeImpact", "convergedinfra.HealthCheckDefinition", "convergedinfra.HealthCheckExecution", "convergedinfra.Pod", "crd.CustomResource", "deviceconnector.Policy", "equipment.Chassis", "equipment.ChassisIdentity", "equipment.ChassisOperation", "equipment.DeviceSummary", "equipment.ExpanderModule", "equipment.Fan", "equipment.FanControl", "equipment.FanModule", "equipment.Fex", "equipment.FexIdentity", "equipment.FexOperation", "equipment.Fru", "equipment.IdentitySummary", "equipment.IoCard", "equipment.IoCardOperation", "equipment.IoExpander", "equipment.LocatorLed", "equipment.Psu", "equipment.PsuControl", "equipment.RackEnclosure", "equipment.RackEnclosureSlot", "equipment.SharedIoModule", "equipment.SwitchCard", "equipment.SystemIoController", "equipment.Tpm", "equipment.Transceiver", "ether.HostPort", "ether.NetworkPort", "ether.PhysicalPort", "ether.PortChannel", "externalsite.Authorization", "fabric.AppliancePcRole", "fabric.ApplianceRole", "fabric.ConfigChangeDetail", "fabric.ConfigResult", "fabric.ConfigResultEntry", "fabric.ElementIdentity", "fabric.EstimateImpact", "fabric.EthNetworkControlPolicy", "fabric.EthNetworkGroupPolicy", "fabric.EthNetworkPolicy", "fabric.FcNetworkPolicy", "fabric.FcUplinkPcRole", "fabric.FcUplinkRole", "fabric.FcoeUplinkPcRole", "fabric.FcoeUplinkRole", "fabric.FlowControlPolicy", "fabric.LinkAggregationPolicy", "fabric.LinkControlPolicy", "fabric.MulticastPolicy", "fabric.PcMember", "fabric.PcOperation", "fabric.PortMode", "fabric.PortOperation", "fabric.PortPolicy", "fabric.ServerRole", "fabric.SwitchClusterProfile", "fabric.SwitchControlPolicy", "fabric.SwitchProfile", "fabric.SystemQosPolicy", "fabric.UplinkPcRole", "fabric.UplinkRole", "fabric.Vlan", "fabric.Vsan", "fault.Instance", "fc.PhysicalPort", "fc.PortChannel", "fcpool.FcBlock", "fcpool.Lease", "fcpool.Pool", "fcpool.PoolMember", "fcpool.Universe", "feedback.FeedbackPost", "firmware.BiosDescriptor", "firmware.BoardControllerDescriptor", "firmware.ChassisUpgrade", "firmware.CimcDescriptor", "firmware.DimmDescriptor", "firmware.Distributable", "firmware.DistributableMeta", "firmware.DriveDescriptor", "firmware.DriverDistributable", "firmware.Eula", "firmware.FirmwareSummary", "firmware.GpuDescriptor", "firmware.HbaDescriptor", "firmware.IomDescriptor", "firmware.MswitchDescriptor", "firmware.NxosDescriptor", "firmware.PcieDescriptor", "firmware.PsuDescriptor", "firmware.RunningFirmware", "firmware.SasExpanderDescriptor", "firmware.ServerConfigurationUtilityDistributable", "firmware.StorageControllerDescriptor", "firmware.SwitchUpgrade", "firmware.UnsupportedVersionUpgrade", "firmware.Upgrade", "firmware.UpgradeImpact", "firmware.UpgradeImpactStatus", "firmware.UpgradeStatus", "forecast.Catalog", "forecast.Definition", "forecast.Instance", "graphics.Card", "graphics.Controller", "hcl.CompatibilityStatus", "hcl.DriverImage", "hcl.ExemptedCatalog", "hcl.HyperflexSoftwareCompatibilityInfo", "hcl.OperatingSystem", "hcl.OperatingSystemVendor", "hcl.SupportedDriverName", "hyperflex.Alarm", "hyperflex.AppCatalog", "hyperflex.AutoSupportPolicy", "hyperflex.BackupCluster", "hyperflex.CapabilityInfo", "hyperflex.CiscoHypervisorManager", "hyperflex.Cluster", "hyperflex.ClusterBackupPolicy", "hyperflex.ClusterBackupPolicyDeployment", "hyperflex.ClusterBackupPolicyInventory", "hyperflex.ClusterHealthCheckExecutionSnapshot", "hyperflex.ClusterNetworkPolicy", "hyperflex.ClusterProfile", "hyperflex.ClusterReplicationNetworkPolicy", "hyperflex.ClusterReplicationNetworkPolicyDeployment", "hyperflex.ClusterStoragePolicy", "hyperflex.ConfigResult", "hyperflex.ConfigResultEntry", "hyperflex.DataProtectionPeer", "hyperflex.DatastoreStatistic", "hyperflex.DevicePackageDownloadState", "hyperflex.Drive", "hyperflex.ExtFcStoragePolicy", "hyperflex.ExtIscsiStoragePolicy", "hyperflex.FeatureLimitExternal", "hyperflex.FeatureLimitInternal", "hyperflex.Health", "hyperflex.HealthCheckDefinition", "hyperflex.HealthCheckExecution", "hyperflex.HealthCheckExecutionSnapshot", "hyperflex.HealthCheckPackageChecksum", "hyperflex.HxapCluster", "hyperflex.HxapDatacenter", "hyperflex.HxapDvUplink", "hyperflex.HxapDvswitch", "hyperflex.HxapHost", "hyperflex.HxapHostInterface", "hyperflex.HxapHostVswitch", "hyperflex.HxapNetwork", "hyperflex.HxapVirtualDisk", "hyperflex.HxapVirtualMachine", "hyperflex.HxapVirtualMachineNetworkInterface", "hyperflex.HxdpVersion", "hyperflex.License", "hyperflex.LocalCredentialPolicy", "hyperflex.Node", "hyperflex.NodeConfigPolicy", "hyperflex.NodeProfile", "hyperflex.ProtectedCluster", "hyperflex.ProxySettingPolicy", "hyperflex.ServerFirmwareVersion", "hyperflex.ServerFirmwareVersionEntry", "hyperflex.ServerModel", "hyperflex.ServiceAuthToken", "hyperflex.SoftwareDistributionComponent", "hyperflex.SoftwareDistributionEntry", "hyperflex.SoftwareDistributionVersion", "hyperflex.SoftwareVersionPolicy", "hyperflex.StorageContainer", "hyperflex.SysConfigPolicy", "hyperflex.UcsmConfigPolicy", "hyperflex.VcenterConfigPolicy", "hyperflex.VmBackupInfo", "hyperflex.VmImportOperation", "hyperflex.VmRestoreOperation", "hyperflex.VmSnapshotInfo", "hyperflex.Volume", "hyperflex.WitnessConfiguration", "iaas.ConnectorPack", "iaas.DeviceStatus", "iaas.DiagnosticMessages", "iaas.LicenseInfo", "iaas.MostRunTasks", "iaas.ServiceRequest", "iaas.UcsdInfo", "iaas.UcsdManagedInfra", "iaas.UcsdMessages", "iam.Account", "iam.AccountExperience", "iam.ApiKey", "iam.AppRegistration", "iam.BannerMessage", "iam.Certificate", "iam.CertificateRequest", "iam.DomainGroup", "iam.EndPointPrivilege", "iam.EndPointRole", "iam.EndPointUser", "iam.EndPointUserPolicy", "iam.EndPointUserRole", "iam.Idp", "iam.IdpReference", "iam.IpAccessManagement", "iam.IpAddress", "iam.LdapGroup", "iam.LdapPolicy", "iam.LdapProvider", "iam.LocalUserPassword", "iam.LocalUserPasswordPolicy", "iam.OAuthToken", "iam.Permission", "iam.PrivateKeySpec", "iam.Privilege", "iam.PrivilegeSet", "iam.Qualifier", "iam.ResourceLimits", "iam.ResourcePermission", "iam.ResourceRoles", "iam.Role", "iam.SecurityHolder", "iam.ServiceProvider", "iam.Session", "iam.SessionLimits", "iam.System", "iam.TrustPoint", "iam.User", "iam.UserGroup", "iam.UserPreference", "inventory.DeviceInfo", "inventory.DnMoBinding", "inventory.GenericInventory", "inventory.GenericInventoryHolder", "inventory.Request", "ipmioverlan.Policy", "ippool.BlockLease", "ippool.IpLease", "ippool.Pool", "ippool.PoolMember", "ippool.ShadowBlock", "ippool.ShadowPool", "ippool.Universe", "iqnpool.Block", "iqnpool.Lease", "iqnpool.Pool", "iqnpool.PoolMember", "iqnpool.Universe", "iwotenant.TenantStatus", "kubernetes.AciCniApic", "kubernetes.AciCniProfile", "kubernetes.AciCniTenantClusterAllocation", "kubernetes.AddonDefinition", "kubernetes.AddonPolicy", "kubernetes.AddonRepository", "kubernetes.BaremetalNodeProfile", "kubernetes.Catalog", "kubernetes.Cluster", "kubernetes.ClusterAddonProfile", "kubernetes.ClusterProfile", "kubernetes.ConfigResult", "kubernetes.ConfigResultEntry", "kubernetes.ContainerRuntimePolicy", "kubernetes.DaemonSet", "kubernetes.Deployment", "kubernetes.Ingress", "kubernetes.NetworkPolicy", "kubernetes.Node", "kubernetes.NodeGroupProfile", "kubernetes.Pod", "kubernetes.Service", "kubernetes.StatefulSet", "kubernetes.SysConfigPolicy", "kubernetes.TrustedRegistriesPolicy", "kubernetes.Version", "kubernetes.VersionPolicy", "kubernetes.VirtualMachineInfraConfigPolicy", "kubernetes.VirtualMachineInfrastructureProvider", "kubernetes.VirtualMachineInstanceType", "kubernetes.VirtualMachineNodeProfile", "kvm.Policy", "kvm.Session", "kvm.Tunnel", "license.AccountLicenseData", "license.CustomerOp", "license.IwoCustomerOp", "license.IwoLicenseCount", "license.LicenseInfo", "license.LicenseReservationOp", "license.SmartlicenseToken", "ls.ServiceProfile", "macpool.IdBlock", "macpool.Lease", "macpool.Pool", "macpool.PoolMember", "macpool.Universe", "management.Controller", "management.Entity", "management.Interface", "memory.Array", "memory.PersistentMemoryConfigResult", "memory.PersistentMemoryConfiguration", "memory.PersistentMemoryNamespace", "memory.PersistentMemoryNamespaceConfigResult", "memory.PersistentMemoryPolicy", "memory.PersistentMemoryRegion", "memory.PersistentMemoryUnit", "memory.Unit", "meta.Definition", "network.Element", "network.ElementSummary", "network.FcZoneInfo", "network.VlanPortInfo", "networkconfig.Policy", "niaapi.ApicCcoPost", "niaapi.ApicFieldNotice", "niaapi.ApicHweol", "niaapi.ApicLatestMaintainedRelease", "niaapi.ApicReleaseRecommend", "niaapi.ApicSweol", "niaapi.DcnmCcoPost", "niaapi.DcnmFieldNotice", "niaapi.DcnmHweol", "niaapi.DcnmLatestMaintainedRelease", "niaapi.DcnmReleaseRecommend", "niaapi.DcnmSweol", "niaapi.FileDownloader", "niaapi.NiaMetadata", "niaapi.NibFileDownloader", "niaapi.NibMetadata", "niaapi.VersionRegex", "niatelemetry.AaaLdapProviderDetails", "niatelemetry.AaaRadiusProviderDetails", "niatelemetry.AaaTacacsProviderDetails", "niatelemetry.ApicAppPluginDetails", "niatelemetry.ApicCoreFileDetails", "niatelemetry.ApicDbgexpRsExportDest", "niatelemetry.ApicDbgexpRsTsScheduler", "niatelemetry.ApicFanDetails", "niatelemetry.ApicFexDetails", "niatelemetry.ApicFlashDetails", "niatelemetry.ApicNtpAuth", "niatelemetry.ApicPsuDetails", "niatelemetry.ApicRealmDetails", "niatelemetry.ApicSnmpClientGrpDetails", "niatelemetry.ApicSnmpCommunityAccessDetails", "niatelemetry.ApicSnmpCommunityDetails", "niatelemetry.ApicSnmpTrapDetails", "niatelemetry.ApicSnmpTrapFwdServerDetails", "niatelemetry.ApicSnmpVersionThreeDetails", "niatelemetry.ApicSysLogGrp", "niatelemetry.ApicSysLogSrc", "niatelemetry.ApicTransceiverDetails", "niatelemetry.ApicUiPageCounts", "niatelemetry.AppDetails", "niatelemetry.CommonPolicies", "niatelemetry.DcnmFanDetails", "niatelemetry.DcnmFexDetails", "niatelemetry.DcnmModuleDetails", "niatelemetry.DcnmPsuDetails", "niatelemetry.DcnmTransceiverDetails", "niatelemetry.Epg", "niatelemetry.FabricModuleDetails", "niatelemetry.FabricPodProfile", "niatelemetry.FabricPodSs", "niatelemetry.Fault", "niatelemetry.HttpsAclContractDetails", "niatelemetry.HttpsAclContractFilterMap", "niatelemetry.HttpsAclEpgContractMap", "niatelemetry.HttpsAclEpgDetails", "niatelemetry.HttpsAclFilterDetails", "niatelemetry.Lc", "niatelemetry.MsoContractDetails", "niatelemetry.MsoEpgDetails", "niatelemetry.MsoSchemaDetails", "niatelemetry.MsoSiteDetails", "niatelemetry.MsoTenantDetails", "niatelemetry.NexusDashboardControllerDetails", "niatelemetry.NexusDashboardDetails", "niatelemetry.NexusDashboardMemoryDetails", "niatelemetry.NexusDashboards", "niatelemetry.NiaFeatureUsage", "niatelemetry.NiaInventory", "niatelemetry.NiaInventoryDcnm", "niatelemetry.NiaInventoryFabric", "niatelemetry.NiaLicenseState", "niatelemetry.PasswordStrengthCheck", "niatelemetry.PodCommPolicies", "niatelemetry.PodSnmpPolicies", "niatelemetry.PodTimeServerPolicies", "niatelemetry.SiteInventory", "niatelemetry.SnmpSrc", "niatelemetry.SshVersionTwo", "niatelemetry.SupervisorModuleDetails", "niatelemetry.SyslogRemoteDest", "niatelemetry.SyslogSysMsg", "niatelemetry.SyslogSysMsgFacFilter", "niatelemetry.SystemControllerDetails", "niatelemetry.Tenant", "notification.AccountSubscription", "ntp.Policy", "oprs.Deployment", "oprs.SyncTargetListMessage", "organization.Organization", "os.BulkInstallInfo", "os.Catalog", "os.ConfigurationFile", "os.Distribution", "os.Install", "os.OsSupport", "os.SupportedVersion", "os.TemplateFile", "os.ValidInstallTarget", "pci.CoprocessorCard", "pci.Device", "pci.Link", "pci.Switch", "port.Group", "port.MacBinding", "port.SubGroup", "power.ControlState", "power.Policy", "processor.Unit", "rack.UnitPersonality", "recommendation.CapacityRunway", "recommendation.PhysicalItem", "recovery.BackupConfigPolicy", "recovery.BackupProfile", "recovery.ConfigResult", "recovery.ConfigResultEntry", "recovery.OnDemandBackup", "recovery.Restore", "recovery.ScheduleConfigPolicy", "resource.Group", "resource.GroupMember", "resource.LicenseResourceCount", "resource.Membership", "resource.MembershipHolder", "resource.Reservation", "resourcepool.Lease", "resourcepool.LeaseResource", "resourcepool.Pool", "resourcepool.PoolMember", "resourcepool.Universe", "rproxy.ReverseProxy", "sdcard.Policy", "sdwan.Profile", "sdwan.RouterNode", "sdwan.RouterPolicy", "sdwan.VmanageAccountPolicy", "search.SearchItem", "search.TagItem", "security.Unit", "server.ConfigChangeDetail", "server.ConfigImport", "server.ConfigResult", "server.ConfigResultEntry", "server.Profile", "server.ProfileTemplate", "smtp.Policy", "snmp.Policy", "software.ApplianceDistributable", "software.DownloadHistory", "software.HclMeta", "software.HyperflexBundleDistributable", "software.HyperflexDistributable", "software.ReleaseMeta", "software.SolutionDistributable", "software.UcsdBundleDistributable", "software.UcsdDistributable", "softwarerepository.Authorization", "softwarerepository.CachedImage", "softwarerepository.Catalog", "softwarerepository.CategoryMapper", "softwarerepository.CategoryMapperModel", "softwarerepository.CategorySupportConstraint", "softwarerepository.DownloadSpec", "softwarerepository.OperatingSystemFile", "softwarerepository.Release", "sol.Policy", "ssh.Policy", "storage.Controller", "storage.DiskGroup", "storage.DiskSlot", "storage.DriveGroup", "storage.Enclosure", "storage.EnclosureDisk", "storage.EnclosureDiskSlotEp", "storage.FlexFlashController", "storage.FlexFlashControllerProps", "storage.FlexFlashPhysicalDrive", "storage.FlexFlashVirtualDrive", "storage.FlexUtilController", "storage.FlexUtilPhysicalDrive", "storage.FlexUtilVirtualDrive", "storage.HitachiArray", "storage.HitachiController", "storage.HitachiDisk", "storage.HitachiHost", "storage.HitachiHostLun", "storage.HitachiParityGroup", "storage.HitachiPool", "storage.HitachiPort", "storage.HitachiVolume", "storage.HyperFlexStorageContainer", "storage.HyperFlexVolume", "storage.Item", "storage.NetAppAggregate", "storage.NetAppBaseDisk", "storage.NetAppCluster", "storage.NetAppEthernetPort", "storage.NetAppExportPolicy", "storage.NetAppFcInterface", "storage.NetAppFcPort", "storage.NetAppInitiatorGroup", "storage.NetAppIpInterface", "storage.NetAppLicense", "storage.NetAppLun", "storage.NetAppLunMap", "storage.NetAppNode", "storage.NetAppNtpServer", "storage.NetAppSensor", "storage.NetAppStorageVm", "storage.NetAppVolume", "storage.NetAppVolumeSnapshot", "storage.PhysicalDisk", "storage.PhysicalDiskExtension", "storage.PhysicalDiskUsage", "storage.PureArray", "storage.PureController", "storage.PureDisk", "storage.PureHost", "storage.PureHostGroup", "storage.PureHostLun", "storage.PurePort", "storage.PureProtectionGroup", "storage.PureProtectionGroupSnapshot", "storage.PureReplicationSchedule", "storage.PureSnapshotSchedule", "storage.PureVolume", "storage.PureVolumeSnapshot", "storage.SasExpander", "storage.SasPort", "storage.Span", "storage.StoragePolicy", "storage.VdMemberEp", "storage.VirtualDrive", "storage.VirtualDriveContainer", "storage.VirtualDriveExtension", "storage.VirtualDriveIdentity", "syslog.Policy", "tam.AdvisoryCount", "tam.AdvisoryDefinition", "tam.AdvisoryInfo", "tam.AdvisoryInstance", "tam.SecurityAdvisory", "task.HitachiScopedInventory", "task.HxapScopedInventory", "task.NetAppScopedInventory", "task.PublicCloudScopedInventory", "task.PureScopedInventory", "task.ServerScopedInventory", "techsupportmanagement.CollectionControlPolicy", "techsupportmanagement.Download", "techsupportmanagement.TechSupportBundle", "techsupportmanagement.TechSupportStatus", "terminal.AuditLog", "terraform.Executor", "thermal.Policy", "top.System", "ucsd.BackupInfo", "uuidpool.Block", "uuidpool.Pool", "uuidpool.PoolMember", "uuidpool.Universe", "uuidpool.UuidLease", "virtualization.Host", "virtualization.VirtualDisk", "virtualization.VirtualMachine", "virtualization.VirtualNetwork", "virtualization.VmwareCluster", "virtualization.VmwareDatacenter", "virtualization.VmwareDatastore", "virtualization.VmwareDatastoreCluster", "virtualization.VmwareDistributedNetwork", "virtualization.VmwareDistributedSwitch", "virtualization.VmwareFolder", "virtualization.VmwareHost", "virtualization.VmwareKernelNetwork", "virtualization.VmwareNetwork", "virtualization.VmwarePhysicalNetworkInterface", "virtualization.VmwareUplinkPort", "virtualization.VmwareVcenter", "virtualization.VmwareVirtualDisk", "virtualization.VmwareVirtualMachine", "virtualization.VmwareVirtualMachineSnapshot", "virtualization.VmwareVirtualNetworkInterface", "virtualization.VmwareVirtualSwitch", "vmedia.Policy", "vmrc.Console", "vnc.Console", "vnic.EthAdapterPolicy", "vnic.EthIf", "vnic.EthNetworkPolicy", "vnic.EthQosPolicy", "vnic.FcAdapterPolicy", "vnic.FcIf", "vnic.FcNetworkPolicy", "vnic.FcQosPolicy", "vnic.IscsiAdapterPolicy", "vnic.IscsiBootPolicy", "vnic.IscsiStaticTargetPolicy", "vnic.LanConnectivityPolicy", "vnic.LcpStatus", "vnic.SanConnectivityPolicy", "vnic.ScpStatus", "vrf.Vrf", "workflow.BatchApiExecutor", "workflow.BuildTaskMeta", "workflow.BuildTaskMetaOwner", "workflow.Catalog", "workflow.CustomDataTypeDefinition", "workflow.ErrorResponseHandler", "workflow.PendingDynamicWorkflowInfo", "workflow.RollbackWorkflow", "workflow.SolutionActionDefinition", "workflow.SolutionActionInstance", "workflow.SolutionDefinition", "workflow.SolutionInstance", "workflow.SolutionOutput", "workflow.TaskDebugLog", "workflow.TaskDefinition", "workflow.TaskInfo", "workflow.TaskMetadata", "workflow.TaskNotification", "workflow.TemplateEvaluation", "workflow.TemplateFunctionMeta", "workflow.WorkflowDefinition", "workflow.WorkflowInfo", "workflow.WorkflowMeta", "workflow.WorkflowMetadata", "workflow.WorkflowNotification"])
      # validator.allowable_values.each do |value|
      #   expect { instance.object_type = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "moid"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "selector"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "link"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
